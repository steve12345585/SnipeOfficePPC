:
eval 'exec perl -S $0 ${1+"$@"}'
    if 0;
# Version: MPL 1.1 / GPLv3+ / LGPLv3+
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License or as specified alternatively below. You may obtain a copy of
# the License at http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Initial Developer of the Original Code is
#       Andras Timar <atimar@suse.com>
# Portions created by the Initial Developer are Copyright (C) 2011 the
# Initial Developer. All Rights Reserved.
#
# Major Contributor(s):
#
# For minor contributions see the git repository.
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 3 or later (the "GPLv3+"), or
# the GNU Lesser General Public License Version 3 or later (the "LGPLv3+"),
# in which case the provisions of the GPLv3+ or the LGPLv3+ are applicable
# instead of those above.
#
# extracts strings from Java properties files
#

use strict;
use File::Basename;
use Getopt::Std;
use Cwd;

my %options=();
getopts("ep:r:i:o:l:", \%options);

unless ( $options{i} =~ m/en_US/ ) {exit 0;}

$options{i} =~ s|\\|/|g; # fix path on Windows, Perl expects / separator
my ($unused1, $dir, $unused2) = File::Basename::fileparse($options{i});
my $file = substr ( Cwd::abs_path($options{i}), length(Cwd::abs_path($dir . $options{r})) + 1 );
$file =~ s|/|\\|g;

open (INFILE, "<$options{i}") || die "propex: cannot open input file: $options{i}";
open (OUTFILE, ">$options{o}") || die "propex: cannot open output file: $options{o}";

while (<INFILE>) {
    chomp;
    if (/=/) {
        my ($id, $value) = split /=/;
        $id    =~ s/^\s+//; #remove leading spaces
        $id    =~ s/\s+$//; #remove trailing spaces
        $value =~ s/^\s+//; #remove leading spaces
        $value =~ s/\s+$//; #remove trailing spaces
        $value =~ s/(\\u([0-9a-fA-F]{4}))/pack("C0U1",hex($2))/ge; #convert ascii escaped unicode to utf-8
        print OUTFILE "$options{p}\t$file\t0\tproperty\t$id\t\t\t\t0\ten-US\t$value\t\t\t\t20020202 02:02:02\n";
    }
}

close (INFILE);
close (OUTFILE);

exit 0;
