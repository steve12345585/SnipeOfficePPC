/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_document_XViewDataSupplier_idl__
#define __com_sun_star_document_XViewDataSupplier_idl__

#include <com/sun/star/container/XIndexAccess.idl>

//=============================================================================

module com { module sun { module star { module document {

//=============================================================================
/** gives access to some properties describing all open views to a document

    <p>
    Each view is described by a sequence< ::com::sun::star::beans::PropertyValue >.
    Through this interface the state of all open views can be retrieved and restored
    later. These states can also be made persistent so that a document loader can create
    all views of the correct types and restore their state to the state when the document was
    saved.
    </p>
 */
published interface XViewDataSupplier: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** retrieve informations about currently opened view to restore it later

        @returns
            a <type scope="com::sun::star::container">XIndexAccess</type>,
            that gives access to a list of <type scope="com::sun::star::beans">PropertyValue</type>
            for every open view. May <NULL/> if no view is currently available.
     */
    ::com::sun::star::container::XIndexAccess getViewData();

    //-------------------------------------------------------------------------
    /** restore all views which will be represented by given data argument

        @param Data
            a list of <type scope="com::sun::star::beans">PropertyValue</type>s
            with information about last opened views to restore it
            <NULL/> isn't allowed here.
     */
    void setViewData( [in] com::sun::star::container::XIndexAccess Data );
};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
