/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_XColumnUpdate_idl__
#define __com_sun_star_sdb_XColumnUpdate_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/sdbc/SQLException.idl>

#include <com/sun/star/util/Date.idl>

#include <com/sun/star/util/DateTime.idl>

#include <com/sun/star/util/Time.idl>

 module com {  module sun {  module star {  module io {
 published interface XInputStream;
};};};};

 module com {  module sun {  module star {  module sdb {


/** is used to update data which is collected in a row.
 */
published interface XColumnUpdate: com::sun::star::uno::XInterface
{

    /** gives a nullable column a null value.
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateNull() raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a boolean value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateBoolean([in]boolean x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a byte value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateByte([in]byte x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a short value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateShort([in]short x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a long value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateInt([in]long x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a hyper value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateLong([in]hyper x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a float value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateFloat([in]float x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a double value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateDouble([in]double x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a string value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateString([in]string x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a byte array value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateBytes([in]sequence<byte> x) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a Date value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateDate([in]com::sun::star::util::Date x)
        raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a Time value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateTime([in]com::sun::star::util::Time x)
        raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a Timestamp value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateTimestamp([in]com::sun::star::util::DateTime x)
      raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a stream value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateBinaryStream([in]com::sun::star::io::XInputStream x,
                             [in]long length) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with a stream value.
        @param x
            the new column value
        @param length
            the length of the stream
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateCharacterStream([in]com::sun::star::io::XInputStream x,
                                 [in]long length) raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with an Object value.
        @param x
            the new column value
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateObject([in]any x)
      raises (com::sun::star::sdbc::SQLException);
    //-------------------------------------------------------------------------

    /** updates a column with an Object value.
        @param x
            the new column value
        @param scale
            the scale
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    void updateNumericObject([in]any x, [in]long scale)
      raises (com::sun::star::sdbc::SQLException);
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
