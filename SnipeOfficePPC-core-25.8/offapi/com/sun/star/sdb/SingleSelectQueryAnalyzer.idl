/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_SingleSelectQueryAnalyzer_idl__
#define __com_sun_star_sdb_SingleSelectQueryAnalyzer_idl__

#include <com/sun/star/sdb/XSingleSelectQueryAnalyzer.idl>

 module com {  module sun {  module star {  module sdbcx {
interface XTablesSupplier;
interface XColumnsSupplier;
};};};};

 module com {  module sun {  module star {  module sdb {

 interface XParametersSupplier;
/** represents a service for analyzing a single select statement.

    <p>
    It hides the complexity of parsing and evaluating a single select statement and provides
    sophisticated methods for accessing a statements filter, group by, having and order
    criteria, as well as the corresponding select columns and tables.
    If supported, it even gives access to the parameters.
    </p>

    @see com::sun::star::sdb::SingleSelectQueryComposer
 */
service SingleSelectQueryAnalyzer
{
    interface XSingleSelectQueryAnalyzer;

    /** access to the selected tables.

        <p>The selected tables are those present in the <code>FROM</code> part
        of a <code>SELECT</code> statement.</p>

        <p>Note that OpenOffice.org since version 2.0.4 also supports queries which are
        based on other queries. For example, given that you have a database containing
        a query named <code>All Orders</code>, the SQL statement <code>SELECT * FROM "All Orders"</code>
        is perfectly valid when used with a <type>SingleSelectQueryAnalyzer</type>.</p>

        <p>In this case, the name container returned by <member scope="com::sun::star::sdbcx">XTablesSupplier::getTables</member>
        will in fact not return a <type>Table</type>, but a <type>Query</type> object. Semantically, however,
        this object still acts as a table in the SQL statement.</p>

        @see XSingleSelectQueryAnalyzer::getQueryWithSubstitution
     */
    interface com::sun::star::sdbcx::XTablesSupplier;

    /** access the selected columns.
     */
    interface com::sun::star::sdbcx::XColumnsSupplier;

    /** access to the parameters which are used in the where clause.
     */
    [optional] interface com::sun::star::sdb::XParametersSupplier;
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
