/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_XCommandPreparation_idl__
#define __com_sun_star_sdb_XCommandPreparation_idl__

#include <com/sun/star/sdbc/SQLException.idl>

 module com {  module sun {  module star {  module sdbc {
 published interface XPreparedStatement;
};};};};

 module com {  module sun {  module star {  module sdb {


/** is used for preparation of commands.

    <p>
    A command could be a table, query, or any kind of SQL statement
    prepared by the user.
    </p>
 */
published interface XCommandPreparation: com::sun::star::uno::XInterface
{

    /** creates a
        <type scope="com::sun::star::sdbc">PreparedStatement</type>
        object for sending parameterized SQL statements to the database.

        <p>
        A SQL statement with or without IN parameters can be
        pre-compiled and stored in a PreparedStatement object. This
        object can then be used to efficiently execute this statement
        multiple times.
        </p>
        @param command
            the command to be prepared. Any SQL statement.
        @param commandType
            kind of the command
            <type scope="com::sun::star::sdb">CommandType</type>
        @returns
            the PreparedStatement object
        @throws com::sun::star::sdbc::SQLException
            if a database access error occurs.
     */
    com::sun::star::sdbc::XPreparedStatement prepareCommand([in]string command, [in] long commandType)
         raises (com::sun::star::sdbc::SQLException);
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
