/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2008 by Sun Microsystems, Inc.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_InteractionHandler_idl__
#define __com_sun_star_sdb_InteractionHandler_idl__

module com { module sun { module star { module task {
    interface XInteractionHandler2;
}; }; }; };

module com {  module sun {  module star {  module sdb {

/** describes a service which is able to handle database-related interactions.

    <p>Usually, you will not instantiate this service directly. Instead, you'll instantiate a generic
    <type scope="com::sun::star::task">InteractionHandler</type> service, and pass it your request. Based on
    configuration data, this implementation will decide where to forward the request to.</p>

    <p>By default, the <code>DatabaseInteractionHandler</code> feels responsible (as per configuration) for the
    following interaction types:
    <ul>
        <li><b>database related errors</b><br/>
            The general structure to transport such errors is the <type scope="com::sun::star::sdbc">SQLException</type>,
            and if your interaction request supplies such a <code>SQLException</code> (or an instance of any derived class),
            the handler will display a generic error dialog, which is able to travel the object chain which may be contained
            in the exception.
        </li>
        <li><b>parameter requests</b><br/>
            If your interaction request supplies an <type scope="com::sun::star::sdb">ParametersRequest</type>,
            the handler will open a standard dialog asking the user to fill in parameter values.
            <br/>
            In the case you want to use this feature of the handler, you should supply a special continuation
            (<type scope="com::sun::star::sdb">XInteractionSupplyParameters</type>) as well, so the
            handler can return the entered information.
        </li>
    </ul>
    </p>
*/
service DatabaseInteractionHandler: com::sun::star::task::XInteractionHandler2;

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
