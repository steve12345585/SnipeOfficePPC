/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sdb_BooleanComparisonMode_idl__
#define __com_sun_star_sdb_BooleanComparisonMode_idl__

//=============================================================================

module com { module sun { module star { module sdb {

//=============================================================================

/** specifies different mode how boolean comparison predicates are to be generated
    by a <type>SingleSelectQueryComposer</type>.
 */
constants BooleanComparisonMode
{
    /** denotes the default comparison

        <p>Most databases support comparing boolean expressions or column values directly with
        integer values: <code><em>column</em> = 0</code> respectively <code><em>column</em> = 1</code>.</p>
    */
    const long EQUAL_INTEGER    = 0;

    /** requires to use <code>IS <em>boolean_literal</em></code> for boolean comparison.

        <p>That is, the generated comparison predicates will be <code><em>column</em> IS TRUE</code> resp.
        <code><em>column</em> IS FALSE</code>.</p>
    */
    const long IS_LITERAL       = 1;

    /** requires to use <code>= <em>boolean_literal</em></code> for boolean comparison.

        <p>That is, the generated comparison predicates will be <code><em>column</em> = TRUE</code> resp.
        <code><em>column</em> = FALSE</code>.</p>
    */
    const long EQUAL_LITERAL    = 2;

    /** requires to use an Microsoft Access compatible syntax for boolean comparison.
    */
    const long ACCESS_COMPAT    = 3;
};

//=============================================================================

}; }; }; };

//=============================================================================

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
