/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdb_QueryDescriptor_idl__
#define __com_sun_star_sdb_QueryDescriptor_idl__

#include <com/sun/star/sdbcx/Descriptor.idl>

 module com {  module sun {  module star {  module sdbcx {
 published interface XDataDescriptorFactory;
 published interface XColumnsSupplier;
};};};};

#include <com/sun/star/sdb/DataSettings.idl>

 module com {  module sun {  module star {  module sdb {


/** is a stored definition of a SQL "Select statement".

    <p>
    It can be used, if there is a need to execute SQL statement more than once or
    if you want to format the query result fields different from the
    underlying table definitions.
    </p>
 */
published service QueryDescriptor
{
    service com::sun::star::sdbcx::Descriptor;


    /** is provided for creation of a new query descriptor based on the current information.
     */
    interface com::sun::star::sdbcx::XDataDescriptorFactory;


    /** is used for customization of data appearance.
     */
    service com::sun::star::sdb::DataSettings;


    /** access to the columns of the results sets query.
     */
    interface com::sun::star::sdbcx::XColumnsSupplier;


    /** is the command of the query, this is typically a select statement.
     */
    [property] string Command;


    /** should we use escape processing for the query.
     */
    [property] boolean EscapeProcessing;


    /** is the name of the table which should be updated. This is usually used
        for queries which relate on more than one table.
     */
    [property] string UpdateTableName;


    /** is the name of the update table catalog.
     */
    [property] string UpdateCatalogName;


    /** is the name of the update table schema.
     */
    [property] string UpdateSchemaName;
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
