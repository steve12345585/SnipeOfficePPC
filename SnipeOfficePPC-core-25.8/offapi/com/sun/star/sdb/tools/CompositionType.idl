/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sdb_tools_CompositionRule_idl__
#define __com_sun_star_sdb_tools_CompositionRule_idl__

//=============================================================================
module com {  module sun {  module star {  module sdb { module tools {
//=============================================================================

/** specifies which composition should be used when composing a table
    name.

    @see XTableName

    @since OOo 2.0.4
*/
constants CompositionType
{
    /** specifies composition of a name to be used in table definitions

        @see XDatabaseMetaData::supportsCatalogsInTableDefinitions
        @see XDatabaseMetaData::supportsSchemasInTableDefinitions
    */
    const   long    ForTableDefinitions      = 0;

    /** specifies composition of a name to be used in index definitions

        @see XDatabaseMetaData::supportsCatalogsInIndexDefinitions
        @see XDatabaseMetaData::supportsSchemasInIndexDefinitions
    */
    const   long    ForIndexDefinitions      = 1;

    /** specifies composition of a name to be used in data manipulation

        @see XDatabaseMetaData::supportsCatalogsInDataManipulation
        @see XDatabaseMetaData::supportsSchemasInDataManipulation
    */
    const   long    ForDataManipulation      = 2;

    /** specifies composition of a name to be used in procedure calls

        @see XDatabaseMetaData::supportsCatalogsInProcedureCalls
        @see XDatabaseMetaData::supportsSchemasInProcedureCalls
    */
    const   long    ForProcedureCalls        = 3;

    /** specifies composition of a name to be used in privilege definitions

        @see XDatabaseMetaData::supportsCatalogsInPrivilegeDefinitions
        @see XDatabaseMetaData::supportsSchemasInPrivilegeDefinitions
    */
    const   long    ForPrivilegeDefinitions  = 4;

    /** specifies complete composition of a table name, including catalog and schema (if present),
        disregarding any database support for catalog and schema in any particular statements
    */
    const   long    Complete                 = 5;
};

//=============================================================================
}; }; }; }; };
//=============================================================================

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
