/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
************************************************************************/

#ifndef __com_sun_star_sdb_XDatabaseRegistrationsListener_idl__
#define __com_sun_star_sdb_XDatabaseRegistrationsListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/sdb/DatabaseRegistrationEvent.idl>

//=============================================================================

module com { module sun { module star { module sdb {

//=============================================================================

/** implemented by components which want to be notified of changes in the application-wide registered
    databases.

    @see XDatabaseRegistrations

    @since OOo 3.3
 */
interface XDatabaseRegistrationsListener : ::com::sun::star::lang::XEventListener
{
    /** called when a database has been registered
    */
    void    registeredDatabaseLocation( [in] DatabaseRegistrationEvent Event );

    /** called when a database registration has been revoked
    */
    void    revokedDatabaseLocation( [in] DatabaseRegistrationEvent Event );

    /** called when a the location of a registered database changed

        <p>Note that this talks about registration data only. That is, if the actual file denoted by the database
        registration is moved, this is in no way monitored or reported. Only (successful) calls to
        <member>XDatabaseRegistrations::changeDatabaseLocation</member> are reported here.</p>
    */
    void    changedDatabaseLocation( [in] DatabaseRegistrationEvent Event );
};

//=============================================================================

}; }; }; };

//=============================================================================

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
