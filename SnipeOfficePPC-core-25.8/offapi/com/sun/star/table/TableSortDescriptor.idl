/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_table_TableSortDescriptor_idl__
#define __com_sun_star_table_TableSortDescriptor_idl__

#include <com/sun/star/util/SortDescriptor.idl>
#include <com/sun/star/util/SortField.idl>
#include <com/sun/star/table/TableOrientation.idl>

//=============================================================================

module com {  module sun {  module star {  module table {

//=============================================================================

/** contains properties which describe sorting of rows or columns in a table.

    <p>It extends the general
    <type scope="com::sun::star::util">SortDescriptor</type> with
    table-specific properties.</p>

    @deprecated
 */
published service TableSortDescriptor
{
    //-------------------------------------------------------------------------

    /** contains common sorting properties.
     */
    service com::sun::star::util::SortDescriptor;

    //=========================================================================

    /** specifies the descriptions of the individual sort fields.
     */
    [property] sequence<com::sun::star::util::SortField> SortFields;

    //-------------------------------------------------------------------------

    /** contains the maximum number of sort fields the descriptor can hold.
     */
    [readonly, property] long MaxFieldCount;

    //-------------------------------------------------------------------------

    /** specifies the sorting orientation (sort rows or columns).

        <p>Some implementations may not support sorting columns.</p>

        @deprecated
         use the property <member scope="com::sun::star::util">SortDescriptor::SortColumns</member>
         instead.
     */
    [property] com::sun::star::table::TableOrientation Orientation;

    //-------------------------------------------------------------------------

    /** specifies whether the first row or column (depending on
        <member scope="com::sun::star::util">SortDescriptor::SortColumns</member>) is a
        header which should not be sorted.
     */
    [property] boolean ContainsHeader;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
