/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_table_XCellRange_idl__
#define __com_sun_star_table_XCellRange_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IndexOutOfBoundsException.idl>
#include <com/sun/star/table/XCell.idl>

//=============================================================================

module com {  module sun {  module star {  module table {

//=============================================================================

/** provides access to the cells or to sub-ranges of a cell range.

    @see com::sun::star::table::CellRange
 */
published interface XCellRange: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** Returns a single cell within the range.

        @param nColumn
            is the column index of the cell inside the range.

        @param nRow
            is the row index of the cell inside the range.

        @returns
            the specified cell.

        @throws <type scope="com::sun::star::lang">IndexOutOfBoundsException</type>
            if an index is outside the dimensions of this range.

        @see com::sun::star::table::Cell
     */
    com::sun::star::table::XCell getCellByPosition(
            [in] long nColumn,
            [in] long nRow )
        raises( com::sun::star::lang::IndexOutOfBoundsException );

    //-------------------------------------------------------------------------

    /** Returns a sub-range of cells within the range.

        @param nLeft
            is the column index of the first cell inside the range.

        @param nTop
            is the row index of the first cell inside the range.

        @param nRight
            is the column index of the last cell inside the range.

        @param nBottom
            is the row index of the last cell inside the range.

        @returns
            the specified cell range.

        @throws <type scope="com::sun::star::lang">IndexOutOfBoundsException</type>
            if an index is outside the dimensions of this range.

        @see com::sun::star::table::CellRange
     */
    com::sun::star::table::XCellRange getCellRangeByPosition(
            [in] long nLeft,
            [in] long nTop,
            [in] long nRight,
            [in] long nBottom )
        raises( com::sun::star::lang::IndexOutOfBoundsException );

    //-------------------------------------------------------------------------

    /** Returns a sub-range of cells within the range.

        <p>The sub-range is specified by its name. The format of the range
        name is dependent of the context of the table. In spreadsheets valid
        names may be "A1:C5" or "$B$2" or even defined names for cell ranges
        such as "MySpecialCell".</p>

        @param aRange
            the name of the sub-range.

        @returns
            the specified cell range.

        @see com::sun::star::table::CellRange
     */
    com::sun::star::table::XCellRange getCellRangeByName( [in] string aRange );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
