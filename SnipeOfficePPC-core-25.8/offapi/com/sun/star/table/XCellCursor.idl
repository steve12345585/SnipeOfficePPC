/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_table_XCellCursor_idl__
#define __com_sun_star_table_XCellCursor_idl__

#include <com/sun/star/table/XCellRange.idl>

//=============================================================================

module com {  module sun {  module star {  module table {

//=============================================================================

/** provides methods to control the position of a cell cursor.

    @see com::sun::star::table::CellCursor
 */
published interface XCellCursor: com::sun::star::table::XCellRange
{
    //-------------------------------------------------------------------------

    /** points the cursor to a single cell which is the beginning of a
        contiguous series of (filled) cells.
     */
    void gotoStart();

    //-------------------------------------------------------------------------

    /** points the cursor to a single cell which is the end of a contiguous
        series of (filled) cells.
     */
    void gotoEnd();

    //-------------------------------------------------------------------------

    /** points the cursor to the next unprotected cell.

        <p>If the sheet is not protected, this is the next cell to the
        right.</p>
     */
    void gotoNext();

    //-------------------------------------------------------------------------

    /** points the cursor to the previous unprotected cell.

        <p>If the sheet is not protected, this is the next cell to the
        left.</p>
     */
    void gotoPrevious();

    //-------------------------------------------------------------------------

    /** moves the origin of the cursor relative to the current position.

        @param nColumnOffset
            is the count of columns to move. A negative value moves the
            cursor to the left.

        @param nRowOffset
            is the count of rows to move. A negative value moves the
            cursor to the top.
     */
    void gotoOffset( [in] long nColumnOffset, [in] long nRowOffset );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
