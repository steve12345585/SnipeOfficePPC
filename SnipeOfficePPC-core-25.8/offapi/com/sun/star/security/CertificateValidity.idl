/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

//i20156 - new file for xml security module

/** -- idl definition -- **/

#ifndef __com_sun_star_security_CertificateValidity_idl_
#define __com_sun_star_security_CertificateValidity_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/util/DateTime.idl>

module com { module sun { module star { module security {

/**
 * Constant definition of a certificate characters.
 *
 * The certificate characters will be defined as bit-wise constants.
 */
constants CertificateValidity
{
    const long VALID = 0x00000000;
    /**
     * The certificate is invalid.
     */
    const long INVALID = 0x00000001 ;

    /**
     * The certificate itself is untrusted.
     */
    const long UNTRUSTED = 0x00000002 ;

    /**
     * The current time is not in the range of time for
     * which the certificate is valid.
     */
    const long TIME_INVALID = 0x00000004 ;

    /** The time range of a certificate does not fall within
        the time range of the issuing certificate.
     */
    const long NOT_TIME_NESTED = 0x00000008;

    /**
     * It is a revoked certificate.
     */
    const long REVOKED = 0x00000010 ;

    /**
     * The certificate revocation status is unknown.
     */
    const long UNKNOWN_REVOKATION = 0x00000020 ;

    /**
     * The certificate signature is invalid.
     */
    const long SIGNATURE_INVALID = 0x00000040 ;

    /**
     * The certificate has invalid extensions.
     */
    const long EXTENSION_INVALID = 0x00000080 ;

    /**
     * The certificate has critical unknown extensions.
     */
    const long EXTENSION_UNKNOWN = 0x00000100 ;

    /**
     * The certificate issuer is unknown.
     */
    const long ISSUER_UNKNOWN =  0x00000200;

    /**
     * The certificate issuer is untrusted.
     */
    const long ISSUER_UNTRUSTED = 0x00000400 ;

    /**
     * The certificate issuer is invalid.
     */
    const long ISSUER_INVALID = 0x00001000 ;

    /**
     * The root certificate is unknown.
     */
    const long ROOT_UNKNOWN = 0x00002000 ;

    /**
     * The root certificate is untrusted.
     */
    const long ROOT_UNTRUSTED = 0x00004000 ;

    /**
     * The root certificate is invalid.
     */
    const long ROOT_INVALID = 0x00010000 ;

    /**
     * The certificate chain is incomplete.
     */
    const long CHAIN_INCOMPLETE = 0x00020000 ;
} ;

} ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
