/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_security_XCertificate_idl_
#define __com_sun_star_security_XCertificate_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/util/DateTime.idl>
#include <com/sun/star/security/XCertificateExtension.idl>

module com { module sun { module star { module security {

/**
 * Interface of a PKI Certificate
 *
 * <p>This interface represents a x509 certificate.</p>
 */
interface XCertificate : com::sun::star::uno::XInterface
{
    /**
     * the version number attribute of the certificate.
     */
    [attribute, readonly] short Version ;

    /**
     * the serial number attribute of the certificate.
     */
    [attribute, readonly] sequence< byte > SerialNumber ;

    /**
     * the issuer name attribute of the certificate.
     */
    [attribute, readonly] string IssuerName ;

    /**
     * the subject name attribute of the certificate.
     */
    [attribute, readonly] string SubjectName ;

    /**
     * the validity NotBefore date attribute of the certificate.
     */
    [attribute, readonly] com::sun::star::util::DateTime NotValidBefore ;

    /**
     * the validity NotAfter date attribute of the certificate.
     */
    [attribute, readonly] com::sun::star::util::DateTime NotValidAfter ;

    /**
     * the issuer unique ID attribute of the certificate.
     */
    [attribute, readonly] sequence< byte > IssuerUniqueID ;

    /**
     * the subject unique ID attribute of the certificate.
     */
    [attribute, readonly] sequence< byte > SubjectUniqueID ;

    /**
     * all extensions of a certificate.
     */
    [attribute, readonly] sequence< XCertificateExtension > Extensions ;

    /**
     * the DER encoded form of the certificate
     */
    [attribute, readonly] sequence< byte > Encoded ;

    /**
     * the algorithm of the subject public key
     */
    [attribute, readonly] string SubjectPublicKeyAlgorithm;

    /**
     * the value of the subject public key
     */
    [attribute, readonly] sequence< byte > SubjectPublicKeyValue;

    /**
     * the signature algorithm
     */
    [attribute, readonly] string SignatureAlgorithm;

    /**
     * the SHA-1 thumbprint
     */
    [attribute, readonly] sequence< byte > SHA1Thumbprint;

    /**
     * the MD5 thumbprint
     */
    [attribute, readonly] sequence< byte > MD5Thumbprint;

    /**
     * Find a extension with a object identifier.
     */
    XCertificateExtension findCertificateExtension( [in]sequence< byte > oid ) ;

    /**
     * get the certificate usage
     */
    long getCertificateUsage();
} ;

} ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
