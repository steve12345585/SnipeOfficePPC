/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef _COM_SUN_STAR_XML_XEXPORTFILTER_IDL__
#define _COM_SUN_STAR_XML_XEXPORTFILTER_IDL__

#include <com/sun/star/uno/RuntimeException.idl>
#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/PropertyValue.idl>
#include <com/sun/star/xml/sax/XDocumentHandler.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>

//=============================================================================

module com { module sun { module star { module xml {


//=============================================================================

/** interface to implement for an XML-based import filter. i

    @since OOo 1.1.2
 */
published interface XExportFilter: com::sun::star::uno::XInterface
{
    /** performs the import.

         <p>The source data (location indicated by <var>aSourceData</var>), and
        the XML representation of the document must be generated by calls to
        xocHandler (???) methods.

      @param aSourceData
          <type scope="com::sun::star::document">MediaDescriptor</type>
          which defines the data source

      @param msUserData
          Sequence of strings which contains the user data defined in the
          TypeDetection.xml (???)

      @returns
          <TRUE/> if import process is successful
     */
    boolean exporter(
             [in] sequence< com::sun::star::beans::PropertyValue > aSourceData,
             [in] sequence< string > msUserData )
        raises( com::sun::star::lang::IllegalArgumentException );
};

}; }; }; };
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
