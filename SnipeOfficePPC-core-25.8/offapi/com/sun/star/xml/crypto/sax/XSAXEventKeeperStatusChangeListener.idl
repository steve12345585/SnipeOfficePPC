/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

//i20156 - new file for XML security module

/** -- idl definition -- **/

#ifndef __com_sun_star_xml_crypto_sax_xsaxeventkeeperstatuschangelistener_idl_
#define __com_sun_star_xml_crypto_sax_xsaxeventkeeperstatuschangelistener_idl_

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>

module com { module sun { module star { module xml { module crypto { module sax {

/**
 * Interface of SAXEventKeeper Status Change Listener.
 * <p>
 * This interface is used to receive the SAXEventKeeper status change notification.
 */
interface XSAXEventKeeperStatusChangeListener : com::sun::star::uno::XInterface
{
    /**
     * Notifies the SAXEventKeeper is entering/leaving blocking state.
     *
     * @param isBlocking   <code>true</code> if the SAXEventKeeper is
     *                     entering blocking state, <code>false</code>
     *                     otherwise
     */
    void blockingStatusChanged([in] boolean isBlocking);

    /**
     * Notifies the SAXEventKeeper is entering/leaving collecting state.
     *
     * @param isInsideCollectedElement   <code>true</code> if the SAXEventKeeper is
     *                                   collecting some element, <code>false</code>
     *                                   otherwise
     */
    void collectionStatusChanged([in] boolean isInsideCollectedElement);

    /**
     * Notifies the SAXEventKeeper's buffer is empty/not empty
     *
     * @param isBufferEmpty   <code>true</code> if the SAXEventKeeper has no buffer
     *                        at all; <code>false</code> otherwise.
     */
    void bufferStatusChanged([in] boolean isBufferEmpty);
};

} ; } ; } ; } ; } ; } ;


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
