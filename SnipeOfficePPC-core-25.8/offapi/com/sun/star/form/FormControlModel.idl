/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_form_FormControlModel_idl__
#define __com_sun_star_form_FormControlModel_idl__

#include <com/sun/star/awt/UnoControlModel.idl>

#include <com/sun/star/form/FormComponent.idl>

#include <com/sun/star/beans/XFastPropertySet.idl>

#include <com/sun/star/beans/XPropertyState.idl>


//=============================================================================

 module com {  module sun {  module star {  module form {

//=============================================================================

/** specifies a control model within a form.

    <p>Note that the model-view-paradigm is used for form controls, too.</p>
 */
published service FormControlModel
{
    service com::sun::star::awt::UnoControlModel;

    service com::sun::star::form::FormComponent;

    /** This optional interface gives an efficient access to all
                properties at once or an ability to set more than one property at once.
     */
    [optional] interface com::sun::star::beans::XFastPropertySet;


    /** This optional interface gives access to the state of the
                properties, e.g. whether a default value
                is to be used or not for a certain property.
     */
    [optional] interface com::sun::star::beans::XPropertyState;

    //-------------------------------------------------------------------------

    /** specifies the ID for classification of the component.
        @see FormComponentType
     */
    [readonly, property] short ClassId;

    //-------------------------------------------------------------------------

    /** determines the relative taborder of the control associated with the model.

        <p>The default -1 is used to indicate that the tab-order of this control should be
        determined automatically.</p>

        <p>Each component which supports a tabstop must provide a
        <member>FormControlModel::TabIndex</member> property.</p>

        <p>Normally, a <type>FormController</type> instance is evaluating this property.</p>
     */
    [optional, property] short TabIndex;

    //-------------------------------------------------------------------------

    /** used for additional information.
        <p>No semantics is given for this property, it will usually be used by the creator of a document
        containing form controls.</p>
     */
    [property] string Tag;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
