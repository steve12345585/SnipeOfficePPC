/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_form_component_Form_idl__
#define __com_sun_star_form_component_Form_idl__

#include <com/sun/star/form/FormComponent.idl>
#include <com/sun/star/form/FormComponents.idl>
#include <com/sun/star/form/XForm.idl>
#include <com/sun/star/awt/XTabControllerModel.idl>
#include <com/sun/star/script/XEventAttacherManager.idl>


//=============================================================================

 module com {  module sun {  module star {  module form {  module component {

//=============================================================================

/** This service specifies a form which is a group of FormComponents.

    <p>A form fulfills several tasks, like storing the structure of its
    form components, storing the information concerning tab ordering
    and control grouping, and last but not least, it provides the
    event environment for its contained elements.</p>

    <p>A form acts on the one hand like a container of FormComponents
    and on the other hand like a FormComponent. This generic
    construction allows the definition of hierarchies of forms and their
    dependent subforms.</p>

    @see com::sun::star::form::FormControlModel
 */
published service Form
{
    service com::sun::star::form::FormComponent;

    service com::sun::star::form::FormComponents;

    /** identifies a component as form.
     */
    interface com::sun::star::form::XForm;


    /** This interface has to be implemented to supply the information for tab ordering and component grouping.

        @see com::sun::star::form::FormControlModel::TabIndex
     */
    interface com::sun::star::awt::XTabControllerModel;
};

//=============================================================================

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
