/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_form_component_CheckBox_idl__
#define __com_sun_star_form_component_CheckBox_idl__

#include <com/sun/star/form/FormControlModel.idl>
#include <com/sun/star/awt/UnoControlCheckBoxModel.idl>
#include <com/sun/star/form/XReset.idl>


//=============================================================================

 module com {  module sun {  module star {  module form {  module component {

//=============================================================================

/** specifies the model of a check box control

    <p>The model supports the properties required for HTML, thus you can build up
    <type>HTMLForm</type>s with it</p>
 */
published service CheckBox
{
    service com::sun::star::awt::UnoControlCheckBoxModel;

    service com::sun::star::form::FormControlModel;

    /** can be used to reset the control to it's default state.

        @see CheckBox::DefaultState
    */
    interface com::sun::star::form::XReset;

    //-------------------------------------------------------------------------

    /** contains a default value for the control.

        <p>This value is used when the control is initially displayed, and for resetting it.</p>

        @see com::sun::star::awt::UnoControlCheckBoxModel::State
        @see com::sun::star::form::XReset
     */
    [property] short DefaultState;

    //-------------------------------------------------------------------------

    /** contains a reference value which is used for submission in a HTML
        form

        <p>When submitting a <type>HTMLForm</type> which contains a check box,
        which is checked, the RefValue is used for submission.
     */
    [property] string RefValue;
};

//=============================================================================

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
