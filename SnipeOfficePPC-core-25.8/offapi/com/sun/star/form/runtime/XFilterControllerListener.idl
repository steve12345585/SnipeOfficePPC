/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
************************************************************************/

#ifndef __com_sun_star_form_runtime_XFilterControllerListener_idl__
#define __com_sun_star_form_runtime_XFilterControllerListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/form/runtime/FilterEvent.idl>

//=============================================================================

module com { module sun { module star { module form { module runtime {

//=============================================================================

/** is implemented by components listening for events fired by an <type>XFilterController</type>.

    @since OOo 3.3
*/
interface XFilterControllerListener : ::com::sun::star::lang::XEventListener
{
    /** is fired when a single <em>predicate expression</em> of the filter represented by the filter
        controller changed.

        <p><member>FilterEvent::DisjunctiveTerm</member> is the index of the <em>disjunctive term</em> in which the
        expression changed. This usually equals <member>XFilterController::ActiveTerm</member>.</p>

        <p><member>FilterEvent::FilterComponent</member> denotes the index of the filter component whose
        <em>predicate expression</em> changed.</p>

        <p><member>FilterEvent::PredicateExpression</member> is the new <em>predicate expressions</em>.</p>
    */
    void    predicateExpressionChanged( [in] FilterEvent _Event );

    /** is fired when a <em>disjunctive term</em> was removed from the filter of the filter controller.

        <p><member>FilterEvent::DisjunctiveTerm</member> is the index of the <em>disjunctive term</em> which was
        removed.</p>

        <p><member>FilterEvent::FilterComponent</member> and <member>FilterEvent::PredicateExpression</member> are not
        used for this event type.</p>
    */
    void    disjunctiveTermRemoved( [in] FilterEvent _Event );

    /** is fired when a <em>disjunctive term</em> was added to the filter of the filter controller.

        <p><member>FilterEvent::DisjunctiveTerm</member> is the index of the <em>disjunctive term</em> which was
        added.</p>

        <p><member>FilterEvent::FilterComponent</member> and <member>FilterEvent::PredicateExpression</member> are not
        used for this event type.</p>
    */
    void    disjunctiveTermAdded( [in] FilterEvent _Event );
};

//=============================================================================

}; }; }; }; };

//=============================================================================

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
