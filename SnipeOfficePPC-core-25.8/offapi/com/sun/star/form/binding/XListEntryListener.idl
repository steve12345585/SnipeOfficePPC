/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_form_binding_XListEntryListener_idl__
#define __com_sun_star_form_binding_XListEntryListener_idl__

#include <com/sun/star/lang/XEventListener.idl>
#include <com/sun/star/form/binding/ListEntryEvent.idl>

//=============================================================================

module com {  module sun {  module star {  module form { module binding {

//=============================================================================

/** specifies a listener for changes in a string entry list
*/
interface XListEntryListener : com::sun::star::lang::XEventListener
{
    /** notifies the listener that a single entry in the list has change

        @param Source
            is the event describing the change. The <member>ListEntryEvent::Position</member>
            member denotes the position of the changed entry, the first (and only) element
            of the <member>ListEntryEvent::Entries</member> member denotes the new string
    */
    void    entryChanged( [in] ListEntryEvent Source );

    /** notifies the listener that a range of entries has been inserted into the list

        @param Source
            is the event describing the change. The <member>ListEntryEvent::Position</member>
            member denotes the position of the first inserted entry, the
            <member>ListEntryEvent::Entries</member> member contains the strings which have
            been inserted.
    */
    void    entryRangeInserted( [in] ListEntryEvent Source );

    /** notifies the listener that a range of entries has been removed from the list

        @param Source
            is the event describing the change. The <member>ListEntryEvent::Position</member>
            member denotes the position of the first removed entry, the
            <member>ListEntryEvent::Count</member> member the number of removed entries.
    */
    void    entryRangeRemoved( [in] ListEntryEvent Source );

    /** notifies the listener that all entries of the list have changed.

        <p>The listener should retrieve the complete new list by calling the
        <member>XListEntrySource::getAllListEntries</member> method of the event source
        (which is denoted by <member scope="com::sun::star::lang">EventObject::Source</member>).
    */
    void    allEntriesChanged( [in] com::sun::star::lang::EventObject Source );
};

//=============================================================================

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
