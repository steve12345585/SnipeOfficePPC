/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbcx_View_idl__
#define __com_sun_star_sdbcx_View_idl__

#include <com/sun/star/beans/XPropertySet.idl>

 module com {  module sun {  module star {  module sdbcx {

published interface XRename;
published interface XAlterView;


/** is used to specify views on data. A view object is only used for creation and
    deletion. Inspecting the command of a view is normally not supported.

    <p>
    If a view is going to be added to a database, the view must have a unique
    name within the view and the table container, as it can be used like a table.
    <b>
    Note:
    </b>
    After addition, both the containers for views and the container for tables must
    contain an element for the view.
    </p>
 */
published service View
{

    /** is optional for implementation.
     */
    [optional] interface XRename;

    // gives access to the properties.
    interface com::sun::star::beans::XPropertySet;

    /** allows changing the view's <member>Command</member>.
    */
    [optional] interface XAlterView;


    /** is the name of the view.
     */
    [readonly, property] string Name;


    /** is the name of the views catalog, may be empty.
     */
    [readonly, property] string CatalogName;


    /** is the name of the view's schema, may be empty.
     */
    [readonly, property] string SchemaName;


    /** is the command for creating the view.

        <p>This is typically a SQL Select-Statement.</p>

        <p>This property might be empty when a backend does not support retrieving the current
        SQL command of a view. However, if the <code>View</code> supports altering its command
        via the <member>XAlterView</member> interface, then it's required to also provide the
        current SQL command in the <code>Command</code> property.</p>
     */
    [readonly, property] string Command;


    /** indicates if a check option should be used for the view.

        @see com::sun::star::sdbcx::CheckOption
     */
    [readonly, property] long CheckOption;
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
