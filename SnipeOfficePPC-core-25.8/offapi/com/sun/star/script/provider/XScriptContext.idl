/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_script_provider_XScriptContext_idl__
#define __com_sun_star_script_provider_XScriptContext_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/frame/XDesktop.idl>
#include <com/sun/star/frame/XModel.idl>
#include <com/sun/star/uno/XComponentContext.idl>


module com { module sun { module star { module document {
    interface XScriptInvocationContext;
}; }; }; };

//===========================================================================

module com { module sun { module star { module script { module provider {

//===========================================================================
/**
    This interface is provided to scripts, and provides a means of access to
    the various interfaces which they might need to perform some action on
    a document. It is required to be passed as the first argument for any
    Java scripts.
*/
interface XScriptContext : ::com::sun::star::uno::XInterface {

    //----------------------------------------------------------------------
    /**
        Obtain the document reference on which the script can operate

        @returns
          <type scope="com::sun::star::frame">XModel</type> interface
    */
    ::com::sun::star::frame::XModel getDocument();

    /** provides access to the context where the script was invoked

        <p>In some cases, it is possible that scripts, embedded in a document,
        are executed from within a context which is <em>not</em> the document
        itself. In this case, the <code>getInvocationContext</code> member allows
        to access this context.</p>

        <p>Note that the returned context is allowed to be <NULL/>, in this case,
        the document as returned by <code>getDocument</code> is the invocation context.</p>

        <p>If the returned context is not <NULL/>, its <code>ScriptContainer</code> attribute
        equals the document as returned by <code>XScriptContext::getDocument</code>.</p>

        @since OOo 3.0
    */
    ::com::sun::star::document::XScriptInvocationContext getInvocationContext();

    /**
        Obtain the desktop reference on which the script can operate

        @returns
          <type scope="com::sun::star::frame">XDesktop</type> interface
    */
    ::com::sun::star::frame::XDesktop getDesktop();

    /**
        Obtain the component context which the script can use to create
        other uno components

        @returns
          <type scope="com::sun::star::uno">XComponentContext</type> interface
    */
    ::com::sun::star::uno::XComponentContext getComponentContext();


};

//===========================================================================
}; }; }; }; }; // ::com::sun::star::script::provider

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
