/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_script_provider_XScriptURIHelper_idl__
#define __com_sun_star_script_provider_XScriptURIHelper_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>


//===========================================================================

module com { module sun { module star { module script { module provider {

//===========================================================================
/**
    This interface is used to help transform Scripting Framework storage
    locations to Scripting Framework script URIs and vice versa.
*/
interface XScriptURIHelper : ::com::sun::star::uno::XInterface {

    //----------------------------------------------------------------------
    /**
        Obtain the root storage URI for this ScriptURIHelper. The
        resulting string can be used to access the storage for this
        using the Universal Content Broker

        @returns a URI to the storage as a <atom>string</atom>
    */
    string getRootStorageURI();

    /**
        Obtain the storage URI for a specific Scripting Framework
        script URI.

        @returns a URI to the storage as a <atom>string</atom>

        @throws <type scope="::com::sun::star::lang">IllegalArgumentException</type>
            if the storageURI is not a valid
    */
    string getStorageURI( [in] string scriptURI ) raises
        ( ::com::sun::star::lang::IllegalArgumentException );

    /**
        Obtain the Scripting Framework script URI for a specific UCB URI

        @returns the URI as a <atom>string</atom>

        @throws <type scope="::com::sun::star::lang">IllegalArgumentException</type>
            if the storageURI is not a valid
    */
    string getScriptURI( [in] string storageURI ) raises
        ( ::com::sun::star::lang::IllegalArgumentException );
};

//===========================================================================
}; }; }; }; }; // ::com::sun::star::script::provider

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
