/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_script_vba_XVBAEventProcessor_idl__
#define __com_sun_star_script_vba_XVBAEventProcessor_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/util/VetoException.idl>

//=============================================================================

module com {  module sun {  module star {  module script { module vba {

//=============================================================================

/** Executes VBA event handlers.
 */
interface XVBAEventProcessor
{
    //-------------------------------------------------------------------------

    /** Returns whether a VBA event handler exists.

        @param nEventId
            The identifier of the event. Must be a constant from <type>VBAEventId</type>.

        @param aArgs
            Additional arguments needed to identify some event handlers, e.g. a
            sheet index for spreadsheet events.

        @return
            <TRUE/>, if the VBA event handler exists.

        @throws <type scope="::com::sun::star::lang">IllegalArgumentException</type>
            if the passed event identifier is not supported, or if the passed
            specifier is required but invalid.
    **/
    boolean hasVbaEventHandler( [in] long nEventId, [in] sequence< any > aArgs )
        raises (::com::sun::star::lang::IllegalArgumentException);

    //-------------------------------------------------------------------------

    /** Executes a VBA event handler.

        @param nEventId
            The identifier of the event. Must be a constant from <type>VBAEventId</type>.

        @param aArgs
            The input arguments needed to create the argument list of the VBA
            event handler.

        @return
            <TRUE/>, if event handing is enabled, and the event handler macro
            exists and has been invoked.

        @throws <type scope="::com::sun::star::lang">IllegalArgumentException</type>
            if the passed event identifier is not supported, or if the passed
            arguments do not conform to the arguments expected by the specified
            event.

        @throws <type scope="::com::sun::star::util">VetoException</type>
            if the VBA event handler has indicated to veto the event.
    **/
    boolean processVbaEvent( [in] long nEventId, [in] sequence< any > aArgs )
        raises (::com::sun::star::lang::IllegalArgumentException,
                ::com::sun::star::util::VetoException);

    //-------------------------------------------------------------------------
};

//=============================================================================

}; }; }; }; };

//=============================================================================

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
