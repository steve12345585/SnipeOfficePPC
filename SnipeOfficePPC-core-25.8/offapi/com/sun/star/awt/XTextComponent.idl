/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XTextComponent_idl__
#define __com_sun_star_awt_XTextComponent_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/awt/XTextListener.idl>

#include <com/sun/star/awt/Selection.idl>


//=============================================================================

 module com {  module sun {  module star {  module awt {

//=============================================================================

/** gives access to the text of a component and makes it possible
    to register event listeners.
 */
published interface XTextComponent: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** registers a text event listener.
     */
    [oneway] void addTextListener( [in] com::sun::star::awt::XTextListener l );

    //-------------------------------------------------------------------------

    /** unregisters a text event listener.
     */
    [oneway] void removeTextListener( [in] com::sun::star::awt::XTextListener l );

    //-------------------------------------------------------------------------

    /** sets the text of the component.
     */
    [oneway] void setText( [in] string aText );

    //-------------------------------------------------------------------------

    /** inserts text at the specified position.
     */
    [oneway] void insertText( [in] com::sun::star::awt::Selection Sel,
             [in] string Text );

    //-------------------------------------------------------------------------

    /** returns the text of the component.
     */
    string getText();

    //-------------------------------------------------------------------------

    /** returns the currently selected text.
     */
    string getSelectedText();

    //-------------------------------------------------------------------------

    /** sets the user selection.
     */
    [oneway] void setSelection( [in] com::sun::star::awt::Selection aSelection );

    //-------------------------------------------------------------------------

    /** returns the current user selection.
     */
    com::sun::star::awt::Selection getSelection();

    //-------------------------------------------------------------------------

    /** returns if the text is editable by the user.
     */
    boolean isEditable();

    //-------------------------------------------------------------------------

    /** makes the text editable for the user or read-only.
     */
    [oneway] void setEditable( [in] boolean bEditable );

    //-------------------------------------------------------------------------

    /** sets the maximum text length.
     */
    [oneway] void setMaxTextLen( [in] short nLen );

    //-------------------------------------------------------------------------

    /** returns the currently set maximum text length.
     */
    short getMaxTextLen();

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
