/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XDevice_idl__
#define __com_sun_star_awt_XDevice_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/awt/DeviceInfo.idl>

#include <com/sun/star/awt/FontDescriptor.idl>

//=============================================================================

 module com {  module sun {  module star {  module awt {

 published interface XGraphics;
 published interface XFont;
 published interface XBitmap;
 published interface XDisplayBitmap;

//=============================================================================

/** provides information about a graphical output device and
    offers a factory for the <em>graphics</em> which provides write
    operations on the device.
 */
published interface XDevice: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** creates a new graphics whose output operation is directed to this
        device.
     */
    XGraphics createGraphics();

    //-------------------------------------------------------------------------

    /** creates a new device which is compatible with this one.

        <p>If the device does not support the GETBITS device capability,
        this method returns <NULL/>.</p>
     */
    XDevice createDevice( [in] long nWidth,
             [in] long nHeight );

    //-------------------------------------------------------------------------

    /** returns information about the device.
     */
    com::sun::star::awt::DeviceInfo getInfo();

    //-------------------------------------------------------------------------

    /** returns the list of available font descriptors.
     */
    sequence<FontDescriptor> getFontDescriptors();

    //-------------------------------------------------------------------------

    /** returns information about a font offered by this device.

        @returns the font of this device.

        @param aDescriptor
        specifies the description of a font.
        The unit of measure is pixel for this device.
     */
    com::sun::star::awt::XFont getFont( [in] FontDescriptor aDescriptor );

    //-------------------------------------------------------------------------

    /** creates a bitmap with the current device depth.

        <p>If the specified area does not lie entirely in the device, the bits
        outside are not specified.</p>
     */
    XBitmap createBitmap( [in] long nX,
             [in] long nY,
             [in] long nWidth,
             [in] long nHeight );

    //-------------------------------------------------------------------------

    /** creates a device compatible bitmap.

        <p>The data of the bitmap is in process memory instead of in the device,
        so that the output operation is fast.</p>
     */
    XDisplayBitmap createDisplayBitmap( [in] XBitmap Bitmap );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
