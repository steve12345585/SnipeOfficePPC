/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XVclWindowPeer_idl__
#define __com_sun_star_awt_XVclWindowPeer_idl__

#include <com/sun/star/awt/XWindowPeer.idl>

#include <com/sun/star/util/Color.idl>
#include <com/sun/star/awt/FontDescriptor.idl>


//=============================================================================

 module com {  module sun {  module star {  module awt {

//=============================================================================

/** gives access to the VCL window implementation.

    @deprecated
 */
published interface XVclWindowPeer: com::sun::star::awt::XWindowPeer
{
    //-------------------------------------------------------------------------

    /** returns <true/> if the window peer is a child, <false/> otherwise.
     */
    boolean isChild( [in] com::sun::star::awt::XWindowPeer Peer );

    //-------------------------------------------------------------------------

    /** sets the design mode for use in a design editor.
     */
    [oneway] void setDesignMode( [in] boolean bOn );

    //-------------------------------------------------------------------------

    /** returns <true/> if the window peer is in design mode,
        <false/> otherwise.
     */
    boolean isDesignMode();

    //-------------------------------------------------------------------------

    /** enables clipping of sibling windows.
     */
    [oneway] void enableClipSiblings( [in] boolean bClip );

    //-------------------------------------------------------------------------

    /** sets the foreground color.
     */
    [oneway] void setForeground( [in] com::sun::star::util::Color Color );

    //-------------------------------------------------------------------------

    /** sets the control font.
     */
    [oneway] void setControlFont( [in] com::sun::star::awt::FontDescriptor aFont );

    //-------------------------------------------------------------------------

    /** returns the font, foreground and background color for the specified
        type.
     */
    void getStyles( [in] short nType,
             [out] com::sun::star::awt::FontDescriptor Font,
             [out] com::sun::star::util::Color ForegroundColor,
             [out] com::sun::star::util::Color BackgroundColor );

    //-------------------------------------------------------------------------

    /** sets the value of the property with the specified name.
     */
    void setProperty( [in] string PropertyName,
             [in] any Value );

    //-------------------------------------------------------------------------

    /** returns the value of the property with the specified name.
     */
    any getProperty( [in] string PropertyName );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
