/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_awt_XImageProducer_idl__
#define __com_sun_star_awt_XImageProducer_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/awt/XImageConsumer.idl>


//=============================================================================

 module com {  module sun {  module star {  module awt {

//=============================================================================

/** specifies a source for an image.
 */
published interface XImageProducer: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** registers an image consumer with the image producer for accessing
        the image data during a later reconstruction of the image.

        <p>The image producer may, at its discretion, start delivering the
        image data to the consumer using the <type>XImageConsumer</type>
        interface immediately, or when the next available image reconstruction
        is triggered by a call to the startProduction method.</p>
     */
    [oneway] void addConsumer( [in] com::sun::star::awt::XImageConsumer xConsumer );

    //-------------------------------------------------------------------------

    /** removes the given <type scope="com::sun::star::awt">XImageConsumer</type>
        callback from the list of consumers currently registered to receive
        image data.

        <p>It is not considered an error to remove a consumer that is not
        currently registered. The image producer should stop sending data
        to this consumer as soon as it is feasible.</p>
     */
    [oneway] void removeConsumer( [in] com::sun::star::awt::XImageConsumer xConsumer );

    //-------------------------------------------------------------------------

    /** registers the given image consumer as a consumer
        and starts an immediate reconstruction of the image data.

        <p>The image data will then be delivered to this consumer and any other
        consumer which may have already been registered with the producer.
        This method differs from the addConsumer method in that a reproduction of
        the image data should be triggered as soon as possible.</p>
     */
    [oneway] void startProduction();

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
