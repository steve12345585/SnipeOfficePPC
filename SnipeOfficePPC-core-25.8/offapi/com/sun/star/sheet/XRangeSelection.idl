/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sheet_XRangeSelection_idl__
#define __com_sun_star_sheet_XRangeSelection_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/PropertyValue.idl>

//=============================================================================

 module com {  module sun {  module star {  module sheet {

 published interface XRangeSelectionListener;
 published interface XRangeSelectionChangeListener;

//=============================================================================

/** allows to let the user to select a cell range.

    @see com::sun::star::sheet::SpreadsheetView
 */
published interface XRangeSelection: com::sun::star::uno::XInterface
{
    /** starts the range selection.

        @param aArguments
        the <type>RangeSelectionArguments</type> that specify how the
        range selection is done.
     */
    void startRangeSelection(
                [in] sequence<com::sun::star::beans::PropertyValue> aArguments );

    /** aborts the range selection.
     */
    void abortRangeSelection();

    /** adds a listener that is notified when range selection is completed
        or aborted.
     */
    void addRangeSelectionListener(
                [in] com::sun::star::sheet::XRangeSelectionListener aListener );

    /** removes the specified listener.
     */
    void removeRangeSelectionListener(
                [in] com::sun::star::sheet::XRangeSelectionListener aListener );

    /** adds a listener that is notified when the selected range is changed.
     */
    void addRangeSelectionChangeListener(
                [in] com::sun::star::sheet::XRangeSelectionChangeListener aListener );

    /** removes the specified listener.
     */
    void removeRangeSelectionChangeListener(
                [in] com::sun::star::sheet::XRangeSelectionChangeListener aListener );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
