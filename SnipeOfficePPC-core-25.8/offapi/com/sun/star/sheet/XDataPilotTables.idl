/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_XDataPilotTables_idl__
#define __com_sun_star_sheet_XDataPilotTables_idl__

#include <com/sun/star/container/XNameAccess.idl>
#include <com/sun/star/sheet/XDataPilotDescriptor.idl>
#include <com/sun/star/table/CellAddress.idl>

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides access to the data pilot tables via name and inserting and
    removing data pilot tables.

    <p>This interface extends the interface
    <type scope="com::sun::star::container">XNameAccess</type> which provides
    access to existing data pilot tables in the collection.</p>

    @see com::sun::star::sheet::DataPilotTables
    @see com::sun::star::sheet::DataPilotTable
 */
published interface XDataPilotTables: com::sun::star::container::XNameAccess
{
    //-------------------------------------------------------------------------

    /** creates a data pilot descriptor.

        <p>This descriptor can be used with
        <member>XDataPilotTables::addTable</member>.</p>

        @see com::sun::star::sheet::DataPilotDescriptor
     */
    com::sun::star::sheet::XDataPilotDescriptor createDataPilotDescriptor();

    //-------------------------------------------------------------------------

    /** creates a new data pilot table and adds it to the collection.

        @param aName
            the name of the data pilot table used in the collection.

        @param aAoutputAddress
            the top left cell of the location of the data pilot table in
            the spreadsheet document.

        @param xDescriptor
            the descriptor containing the settings of the data pilot table.

        @see com::sun::star::sheet::DataPilotDescriptor
     */
    void insertNewByName(
            [in] string aName,
            [in] com::sun::star::table::CellAddress aOutputAddress,
            [in] com::sun::star::sheet::XDataPilotDescriptor xDescriptor );

    //-------------------------------------------------------------------------

    /** deletes a data pilot table from the collection.
     */
    void removeByName( [in] string aName );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
