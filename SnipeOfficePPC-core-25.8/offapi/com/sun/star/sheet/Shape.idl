/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sheet_Shape_idl__
#define __com_sun_star_sheet_Shape_idl__

#include <com/sun/star/drawing/Shape.idl>
#include <com/sun/star/uno/XInterface.idl>

//=============================================================================

 module com {  module sun {  module star {  module sheet {

//=============================================================================

/** specifies the service of shapes in a spreadsheet document
 */
service Shape
{
    service com::sun::star::drawing::Shape;
    //-------------------------------------------------------------------------
    /** contains the object where this shape is anchored on.
        <p> Possible objects are XSpreadsheet and XCell.</p>
    */
    [readonly, property] com::sun::star::uno::XInterface Anchor;
        //-------------------------------------------------------------------------
    /** contains the horizontal position of the object (1/100 mm).
        <p> The position is relative to the anchor object.</p>
        <p> If the underlying table layout direction is left to right
        the position is the difference of the left top edge of the anchor
        object and the left top edge of the drawing object.</p>
        <p> If the underlying table layout direction is right to left
        the position is the difference of the right top edge of the anchor
        object and the right top edge of the drawing object.</p>
     */
    [property] long HoriOrientPosition;
    //-------------------------------------------------------------------------
    /** contains the vertical position of the object (1/100 mm).
        <p> The position is relative to the anchor object.</p>
        <p> If the underlying table layout direction is left to right
        the position is the difference of the left top edge of the anchor
        object and the left top edge of the drawing object.</p>
        <p> If the underlying table layout direction is right to left
        the position is the difference of the right top edge of the anchor
        object and the right top edge of the drawing object.</p>
     */
    [property] long VertOrientPosition;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
