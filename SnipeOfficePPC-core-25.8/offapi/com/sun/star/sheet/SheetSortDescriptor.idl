/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sheet_SheetSortDescriptor_idl__
#define __com_sun_star_sheet_SheetSortDescriptor_idl__

#include <com/sun/star/table/TableSortDescriptor.idl>
#include <com/sun/star/table/CellAddress.idl>

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** a description of how a cell range is to be sorted.

    <p>This service extends the <type scope="com::sun::star::table">TableSortDescriptor</type>
    service with spreadsheet specific properties.</p>
 */
published service SheetSortDescriptor
{
    //-------------------------------------------------------------------------

    /** provides common table sorting properties.
     */
    service com::sun::star::table::TableSortDescriptor;

    //=========================================================================

    /** specifies if cell formats are moved with the contents
        they belong to.
     */
    [property] boolean BindFormatsToContent;

    //-------------------------------------------------------------------------

    /** specifies if a user defined sorting list is used.
     */
    [property] boolean IsUserListEnabled;

    //-------------------------------------------------------------------------

    /** specifies which user defined sorting list is used.

        <p>This property is only used, if
        <member>SheetSortDescriptor::IsUserListEnabled</member> is <TRUE/>.</p>
     */
    [property] long UserListIndex;

    //-------------------------------------------------------------------------

    /** specifies if the sorted data should be copied to another
        position in the document.
     */
    [property] boolean CopyOutputData;

    //-------------------------------------------------------------------------

    /** specifies the position where sorted data are to be copied.

        <p>This property is only used, if
        <member>SheetSortDescriptor::CopyOutputData</member> is <TRUE/>.</p>
     */
    [property] com::sun::star::table::CellAddress OutputPosition;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
