/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_XSpreadsheets_idl__
#define __com_sun_star_sheet_XSpreadsheets_idl__

#include <com/sun/star/container/XNameContainer.idl>

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides methods to access the spreadsheets by name and to insert,
    copy, remove and rearrange spreadsheets.

    @see com::sun::star::sheet::Spreadsheets
 */
published interface XSpreadsheets: com::sun::star::container::XNameContainer
{
    //-------------------------------------------------------------------------

    /** inserts a new sheet into the collection.

        @param aName
            the name of the new spreadsheet.
        @param nPosition
            the index of the new spreadsheet in the collection.
     */
    void insertNewByName( [in] string aName, [in] short nPosition );

    //-------------------------------------------------------------------------

    /** moves a sheet within the collection.

        @param aName
            the name of the spreadsheet to move.
        @param nDestination
            the new index of the spreadsheet in the collection.
     */
    void moveByName( [in] string aName, [in] short nDestination );

    //-------------------------------------------------------------------------

    /** copies a sheet within the collection.

        @param aName
            the name of the spreadsheet to copy.
        @param aCopy
            the name of the copy of the spreadsheet.
        @param nDestination
            the index of the copy in the collection.
     */
    void copyByName(
            [in] string aName,
            [in] string aCopy,
            [in] short nDestination );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
