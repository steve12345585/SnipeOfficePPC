/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_DataPilotSourceDimension_idl__
#define __com_sun_star_sheet_DataPilotSourceDimension_idl__

#include <com/sun/star/container/XNamed.idl>
#include <com/sun/star/sheet/XHierarchiesSupplier.idl>
#include <com/sun/star/util/XCloneable.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/sheet/DataPilotFieldOrientation.idl>
#include <com/sun/star/sheet/GeneralFunction.idl>
#include <com/sun/star/sheet/TableFilterField.idl>

//=============================================================================

 module com {  module sun {  module star {  module sheet {

//=============================================================================

/** represents a dimension in a data pilot source.

    <p>A dimension is equivalent to a column of a cell range in a spreadsheet
    used for a data pilot field.</p>

    <p>In more complex data sources, a dimension may contain several
    hierarchies, which consolidate items of a complex data type, called
    levels.</p>

    <p>Example: In a database, a column contains date values. This column
    will be a dimension of the data pilot source. One hierarchy may contain
    the 3 levels year, month, day. Another hierarchy may contain the 2 levels
    year and week number.</p>

    @see com::sun::star::sheet::DataPilotSource
    @see com::sun::star::sheet::DataPilotTable
 */
published service DataPilotSourceDimension
{
    //-------------------------------------------------------------------------

    /** provides access to the name of the dimension, i.e. used in
        collections.
     */
    interface com::sun::star::container::XNamed;

    //-------------------------------------------------------------------------

    /** provides access to the collection of hierarchies of this dimension.
     */
    interface com::sun::star::sheet::XHierarchiesSupplier;

    //-------------------------------------------------------------------------

    /** supports duplicating the dimension.

        <p>A dimension may be used several times in a data pilot table,
        i.e. as row field and data field.</p>
     */
    interface com::sun::star::util::XCloneable;

    //-------------------------------------------------------------------------

//!published service PropertySet
    /** provides access to the properties.
     */
    interface com::sun::star::beans::XPropertySet;

    //=========================================================================

    /** returns the name of the dimension from which this dimension was
        cloned, or <NULL/> if it was not cloned.
     */
    [readonly, property] com::sun::star::container::XNamed Original;

    //-------------------------------------------------------------------------

    /** contains <TRUE/> if this is the dimension used to layout the
        different data dimensions.
     */
    [readonly, property] boolean IsDataLayoutDimension;

    //-------------------------------------------------------------------------

    /** specifies where the dimension is used.
     */
    [property] com::sun::star::sheet::DataPilotFieldOrientation Orientation;

    //-------------------------------------------------------------------------

    /** specifies the position of the dimension within its orientation.
     */
    [property] long Position;

    //-------------------------------------------------------------------------

    /** specifies how data are aggregated.
     */
    [property] com::sun::star::sheet::GeneralFunction Function;

    //-------------------------------------------------------------------------

    /** specifies which hierarchy of the dimension is used.

        @see com::sun::star::sheet::DataPilotSourceHierarchies
     */
    [property] long UsedHierarchy;

    //-------------------------------------------------------------------------

    /** specifies which values are used.
     */
    [property] sequence< com::sun::star::sheet::TableFilterField > Filter;

    //-------------------------------------------------------------------------

    /** contains flags that control the usage of the dimension.

        @see com::sun::star::sheet::DimensionFlags
     */
    [readonly, property, optional] long Flags;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
