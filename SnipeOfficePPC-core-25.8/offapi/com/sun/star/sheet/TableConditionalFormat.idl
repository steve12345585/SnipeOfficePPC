/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_TableConditionalFormat_idl__
#define __com_sun_star_sheet_TableConditionalFormat_idl__

#include <com/sun/star/sheet/XSheetConditionalEntries.idl>
#include <com/sun/star/container/XNameAccess.idl>
#include <com/sun/star/container/XEnumerationAccess.idl>

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** represents a collection of conditional formatting settings for a
    cell or cell range.

    <p>The style of the first fulfilled condition (in index order) will
    be applied to the cell(s).</p>

    @see com::sun::star::sheet::SheetCell
    @see com::sun::star::sheet::SheetCellRange
    @see com::sun::star::sheet::SheetCellRanges
 */
published service TableConditionalFormat
{
    //-------------------------------------------------------------------------

    /** provides methods to insert and remove conditions and to access
        the condition via index.

        @see com::sun::star::sheet::TableConditionalEntry
     */
    interface com::sun::star::sheet::XSheetConditionalEntries;

    //-------------------------------------------------------------------------

    /** provides methods to access the condition via name.

        <p>The name of a condition is "Entry", followed by its index
        (i.e. Entry0, Entry1, ...).</p>

        @see com::sun::star::sheet::TableConditionalEntry
     */
    interface com::sun::star::container::XNameAccess;

    //-------------------------------------------------------------------------

    /** creates an enumeration of all conditional entries.

        @see com::sun::star::sheet::TableConditionalEntryEnumeration
     */
    interface com::sun::star::container::XEnumerationAccess;

    //-------------------------------------------------------------------------

    /** provides methods to access the contained conditional entries by index.

        @see com::sun::star::sheet::TableConditionalEntry
     */
    interface com::sun::star::container::XIndexAccess;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
