/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_sheet_DataPilotFieldGroup_idl__
#define __com_sun_star_sheet_DataPilotFieldGroup_idl__

#include <com/sun/star/container/XNamed.idl>
#include <com/sun/star/container/XNameContainer.idl>
#include <com/sun/star/container/XEnumerationAccess.idl>
#include <com/sun/star/container/XIndexAccess.idl>

//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** represents a collection of members in a data pilot field group.

    <p>The members (also called items) of this collection are instances of
    <type>DataPilotFieldGroupItem</type>.</p>

    @see DataPilotField
    @see DataPilotFieldGroups
    @see DataPilotFieldGroupItem
 */
published service DataPilotFieldGroup
{
    //-------------------------------------------------------------------------

    /** provides access to the name of the data pilot field group.

        <p>It is possible to change the name of this field group as long as
        the new name is not used in the collection of groups in the field.</p>
     */
    interface com::sun::star::container::XNamed;

    //-------------------------------------------------------------------------

    /** provides access to the data pilot field group members in the
        collection via index.
     */
    interface com::sun::star::container::XIndexAccess;

    //-------------------------------------------------------------------------

    /** creates an enumeration of all data pilot field group members.

        @see DataPilotFieldGroupEnumeration
     */
    interface com::sun::star::container::XEnumerationAccess;

    //-------------------------------------------------------------------------

    /** provides access to the data pilot field group members in the
        collection via name.
     */
    interface com::sun::star::container::XNameAccess;

    //-------------------------------------------------------------------------

    /** provides read/write access to the data pilot field group members in
        the collection via name.

        <p>The <type scope="com::sun::star::container">XNameContainer</type>
        and <type scope="com::sun::star::container">XNameReplace</type>
        interfaces can be used to manage the members that this group contains.
        It is possible to insert, remove, and replace members.</p>

        <p>The method <member scope="com::sun::star::container">
        XNameReplace::replaceByName</member> can be used to rename the
        specified member. To do so, the new name has to be passed as second
        argument. An implementation should support the following data types:

        <ul>
        <li>a non-empty <atom>string</atom> specifying the new name of the
        group member.</li>
        <li>an object supporting the <type scope="com::sun::star::container">
        XNamed</type> interface, for example an instance of
        <type>DataPilotFieldGroupItem</type> received from another group.</li>
        </ul></p>

        <p>The method <member scope="com::sun::star::container">
        XNameContainer::insertByName</member> can be used to insert a new
        member into this field group. An implementation should ignore the
        second argument and insert the specified member name.</p>

        <p>The method <member scope="com::sun::star::container">
        XNameContainer::removeByName</member> can be used to remove an
        existing member name.</p>
     */
    [optional] interface com::sun::star::container::XNameContainer;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
