/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sheet_XScenario_idl__
#define __com_sun_star_sheet_XScenario_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/table/CellRangeAddress.idl>


//=============================================================================

module com {  module sun {  module star {  module sheet {

//=============================================================================

/** provides access to the settings of a scenario sheet.

    @see com::sun::star::sheet::Spreadsheet
 */
published interface XScenario: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** returns <TRUE/> if the current object is a scenario.
     */
    boolean getIsScenario();

    //-------------------------------------------------------------------------

    /** returns the comment for the scenario.
     */
    string getScenarioComment();

    //-------------------------------------------------------------------------

    /** sets a new comment for the scenario.
     */
    void setScenarioComment( [in] string aScenarioComment );

    //-------------------------------------------------------------------------

    /** adds more ranges to the scenario.
     */
    void addRanges(
            [in] sequence< com::sun::star::table::CellRangeAddress > aRanges );

    //-------------------------------------------------------------------------

    /** applies the scenario.

        <p>The contents of the scenario ranges are copied into the first
        non-scenario sheet which is in front of the sheet containing
        the scenario by itself.</p>
     */
    void apply();

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
