/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/


#ifndef __com_sun_star_mozilla_XMenuProxy_idl__
#define __com_sun_star_mozilla_XMenuProxy_idl__

#include <com/sun/star/lang/XComponent.idl>

#include <com/sun/star/mozilla/XMenuProxyListener.idl>

//=============================================================================

 module com {  module sun {  module star {  module mozilla {

//=============================================================================


// DocMerge from xml: interface com::sun::star::mozilla::XMenuProxy
/** Allows to execute dispatch for a menu item
    and handles listeners for changes in menu items.
 */
published interface XMenuProxy: com::sun::star::lang::XComponent
{
    //-------------------------------------------------------------------------

    // DocMerge from xml: method com::sun::star::mozilla::XMenuProxy::executeMenuItem
    /** Executes dispatch for the given menu id

        @param ID   [in]:   the menu item

     */
    void executeMenuItem([in] short ID);

    //-------------------------------------------------------------------------

    // DocMerge from xml: method com::sun::star::mozilla::XMenuProxy::addMenuProxyListener
    /** Registers an event listener, which will be called when the menu changes

        @param xListener    [in]:   the listener to be set

     */
    [oneway] void addMenuProxyListener([in] XMenuProxyListener xListener );

    //-------------------------------------------------------------------------

    // DocMerge from xml: method com::sun::star::mozilla::XMenuProxy::removeMenuProxyListener
    /** Unregisters an event listener which was registered with
        <member>XMenuProxy::addMenuProxyListener()</member>.

        @param xListener    [in]:   the listener to be removed

     */
    [oneway] void removeMenuProxyListener([in] XMenuProxyListener xListener );
};

//=============================================================================

}; }; }; };



#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
