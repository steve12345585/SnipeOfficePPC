/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_frame_LayoutManagerEvents_idl__
#define __com_sun_star_frame_LayoutManagerEvents_idl__

//=============================================================================

module com {  module sun {  module star {  module frame {

//=============================================================================
/** provides information about layout manager events

    <p>Events are provided <strong>only</strong> for notification
    purposes only.</p>

    @see com::sun::star::frame::LayoutManager
    @see com::sun::star::frame::XLayoutManagerEventBroadcaster

    @since OOo 2.0
 */
constants LayoutManagerEvents
{
    //-------------------------------------------------------------------------
    /** specifies that the layout manager processed a lock call, which
        prevents it from doing layouts.

        <p>
        This event sends the current lock count as additional
        information.
        </p>
     */
    const short LOCK = 0;

    //-------------------------------------------------------------------------
    /** specifies that the layout manager processed an unlock call, which
        admit layouts when the lock count is zero.

        <p>
        This event sends the current lock count as additional
        information.
        </p>
     */
    const short UNLOCK = 1;

    //-------------------------------------------------------------------------
    /** specifies that the layout manager refreshed the layout of
        the frame.

        <p>
        This event sends no additional information.
        </p>
     */
    const short LAYOUT = 2;

    //-------------------------------------------------------------------------
    /** specifies that the layout manager container frame window
        becomes visible.

        <p>
        This event sends no additional information.
        </p>
     */
    const short VISIBLE = 3;

    //-------------------------------------------------------------------------
    /** specifies that the layout manager container frame window
        becomes invisible.

        <p>
        This event sends no additional information.
        </p>
     */
    const short INVISIBLE = 4;

    //-------------------------------------------------------------------------
    /** A merged menu bar has been set at the layout manager.

        <p>
        This event sends no additional information.
        </p>
     */
    const short MERGEDMENUBAR = 5;

    //-------------------------------------------------------------------------
    /** specifies that a certain user interface element has been made
        visible

        <p>
        This event sends the resource url of the newly visible user
        interface element.
        </p>
     */
    const short UIELEMENT_VISIBLE = 6;

    //-------------------------------------------------------------------------
    /** specifies that a certain user interface element has been made
        invisible

        <p>
        This event sends the resource url of the invisible user
        interface element.
        </p>
     */
    const short UIELEMENT_INVISIBLE = 7;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
