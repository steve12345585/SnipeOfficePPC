/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_DataFormatTranslator_idl__
#define __com_sun_star_datatransfer_DataFormatTranslator_idl__

#include <com/sun/star/lang/XServiceInfo.idl>
#include <com/sun/star/lang/XTypeProvider.idl>

//=============================================================================

module com { module sun { module star { module datatransfer {

//=============================================================================

 published interface XDataFormatTranslator;

//=============================================================================
/** Different platforms use different types to describe data formats available
    during data exchange operations like clipboard or drag&drop.
    Implementations of this service do convert system dependent data types to a
    <type>DataFlavor</type> and vice versa.

    @see com::sun::star::datatransfer::XDataFormatTranslator
    @see com::sun::star::datatransfer::DataFlavor
*/
published service DataFormatTranslator
{
    //-------------------------------------------------------------------------
    /** Converts a <type>DataFlavor</type> to system data types and vice versa.
    */
    interface XDataFormatTranslator;

    //-------------------------------------------------------------------------
    /** Service should always support this interface.
    */
    interface com::sun::star::lang::XServiceInfo;

    //-------------------------------------------------------------------------
    /** Service should always support this interface.
    */
    interface com::sun::star::lang::XTypeProvider;
};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
