/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_dnd_XDragSourceListener_idl__
#define __com_sun_star_datatransfer_dnd_XDragSourceListener_idl__

#include <com/sun/star/datatransfer/dnd/DragSourceDragEvent.idl>
#include <com/sun/star/datatransfer/dnd/DragSourceDropEvent.idl>
#include <com/sun/star/lang/XEventListener.idl>

//=============================================================================

module com { module sun { module star { module datatransfer { module dnd {

//=============================================================================
/** This interface must be implemented by any drag gesture recognizer
    implementation that a drag source supports.

    @see com::sun::star::datatransfer::dnd::XDragGestureRecognizer
    @see com::sun::star::datatransfer::dnd::XDragSource
*/

published interface XDragSourceListener: com::sun::star::lang::XEventListener
{
    //-------------------------------------------------------------------------
    /** This method is invoked to signify that the Drag and Drop operation is
        complete.

        @param dsde
        The <type>DragSourceDropEvent</type>
    */

    [oneway] void dragDropEnd( [in] DragSourceDropEvent dsde );

      //-------------------------------------------------------------------------
    /** Called as the hotspot enters a platform dependent drop site.

        <p><strong>NOTE:</strong> currently this notification can not be ensured by all
        implementations. Do not rely on it ! </p>

        @param dsde
        The <type>DragSourceDragEvent</type>.
    */

    [oneway] void dragEnter( [in] DragSourceDragEvent dsde );

      //-------------------------------------------------------------------------
    /** Called as the hotspot exits a platform dependent drop site.

        <p><strong>NOTE:</strong> Currently this notification can not be ensured by all
        implementations. Do not rely on it ! </p>

        @param dse
        The <type>DragSourceEvent</type>.
    */

    [oneway] void dragExit( [in] DragSourceEvent dse );

      //-------------------------------------------------------------------------
    /** Called as the hotspot moves over a platform dependent drop site.

        @param dsde
        The <type>DragSourceEvent</type>
    */

    [oneway] void dragOver( [in] DragSourceDragEvent dsde );

      //-------------------------------------------------------------------------
    /** Called when the user has modified the drop gesture.

        @param dsde
        The <type>DragSourceEvent</type>.
    */

    [oneway] void dropActionChanged( [in] DragSourceDragEvent dsde );
};

//=============================================================================

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
