/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_dnd_DropTargetDragEvent_idl__
#define __com_sun_star_datatransfer_dnd_DropTargetDragEvent_idl__

#include <com/sun/star/datatransfer/dnd/DropTargetEvent.idl>

//=============================================================================

module com { module sun { module star { module datatransfer { module dnd {

 published interface XDropTargetDragContext;

//=============================================================================
/** The <type>DropTargetDragEvent</type> is delivered from the drop target
    to the currently registered drop target listener.

    <p>It contains information regarding the current state of the operation to enable
    the operations initiator to provide the end user with the appropriate drag
    over feedback.</p>

    @see com::sun::star::datatransfer::dnd::XDropTargetListener
*/

published struct DropTargetDragEvent: com::sun::star::datatransfer::dnd::DropTargetEvent
{
    //-------------------------------------------------------------------------
    /** The drop target context of the current drag operation.

        @see com::sun::star::datatransfer::dnd::XDropTargetDragContext
     */

    XDropTargetDragContext Context;

    //-------------------------------------------------------------------------
    /** This value represents the currently selected drop action.

        @see com::sun::star::datatransfer::dnd::DNDConstants
     */

    byte DropAction;

    //-------------------------------------------------------------------------
    /** The cursor's current x location within the window's coordinates.
     */

    long LocationX;

    //-------------------------------------------------------------------------
    /** The cursor's current y location within the window's coordinates.
     */

    long LocationY;

    //-------------------------------------------------------------------------
    /** This value represents the action or actions supported by the source.
        This may be a combination of arbitrary source actions except ACTION_DEFAULT.
        <p>To combine different actions use a logical OR.</p>

        @see com::sun::star::datatransfer::dnd::DNDConstants
     */

    byte SourceActions;
};

//=============================================================================

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
