/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_datatransfer_clipboard_XClipboardManager_idl__
#define __com_sun_star_datatransfer_clipboard_XClipboardManager_idl__

#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/container/ElementExistException.idl>
#include <com/sun/star/container/NoSuchElementException.idl>
#include <com/sun/star/uno/XInterface.idl>

//=============================================================================

module com { module sun { module star { module datatransfer { module clipboard {

 published interface XClipboard;

//=============================================================================
/** This interface is used to retrieve, add, or remove clipboard instances.

    @see com::sun::star::datatransfer::clipboard::XClipboard
*/

published interface XClipboardManager: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Get a clipboard instance by name.

        @returns
        The clipboard object with the specified name.

        @param aName
        The name of clipboard to return. To retrieve the default (system)
        clipboard, pass an empty string.

        @throws com::sun::star::container::NoSuchElementException
        if no clipboard with the specified name exists.
    */
    XClipboard getClipboard( [in] string aName )
        raises ( com::sun::star::container::NoSuchElementException );

    //-------------------------------------------------------------------------
    /** Add a clipboard instance to the manager's list.

        @param xClipboard
        The clipboard to add.

        @throws com::sun::star::IllegalArgumentException
        if xClipboard is not a valid clipboard.

        @throws com::sun::star::container::ElementExistsException
        if a clipboard with the name of xClipboard already exists.
    */
    void addClipboard( [in] XClipboard xClipboard )
        raises ( com::sun::star::lang::IllegalArgumentException,
                 com::sun::star::container::ElementExistException );

    //-------------------------------------------------------------------------
    /** Removes the clipboard with the specified name from the list.

        @param aName
        The name of the clipboard to remove.
    */
    void removeClipboard( [in] string aName );

    //-------------------------------------------------------------------------
    /** Get a list of a managed clipboards.

        @returns
        A sequence of the names of all available clipboards.
     */
    sequence < string > listClipboardNames();
};

//=============================================================================

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
