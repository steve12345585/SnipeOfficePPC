/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef com_sun_star_chart2_data_LabelOrigin_idl
#define com_sun_star_chart2_data_LabelOrigin_idl

//=============================================================================

module com {  module sun {  module star {  module chart2 { module data {

//=============================================================================

/** is used to specify how the labels have to be created.

    @see <member>XDataSequence::generateLabel</member>.
 */
enum LabelOrigin
{
    //-------------------------------------------------------------------------

    /** If a range spans a single row over more than one column, this
        parameter has the same effect as ROW.  If the range spans a
        single column over more than one row, this is the same as
        COLUMN.

        <p>In case of a range spanning more than one column and row,
        the shorter range of both should be used (e.g. a spreadsheet
        range A1:B10 should treat columns as short side).</p>

        <p>In case of a rectangular range, or a range that is composed
        of more than one contiguous sub-regions, the short side cannot
        be determined, thus
        <member>XDataSequence::generateLabel</member> will return an
        empty sequence.</p>
     */
    SHORT_SIDE,

    //-------------------------------------------------------------------------

    /** This is exactly the opposite of SHORT_SIDE.  I.e., if
        SHORT_SIDE has the same effect as ROW, LONG_SIDE will have the
        same effect as COLUMN and the other way round.

        @see <member>LabelOrigin::SHORT_SIDE</member>
     */
    LONG_SIDE,

    //-------------------------------------------------------------------------

    /** Uses the column name for label generation.  A spreadsheet
        range A1:A6 could, e.g., result in "Column A".

        <p>If a range consists of more than one column the result of
        label generation may be empty.  Of course, it could also
        succeed with a string like "Columns A to B".
     */
    COLUMN,

    //-------------------------------------------------------------------------

    /** Uses the column name for label generation.  A spreadsheet
        range A2:D2 could, e.g., result in "Row 2".

        <p>If a range consists of more than one row the result of
        label generation may be empty.  Of course, it could also
        succeed with a string like "Rows 1-3".
     */
    ROW
};

//=============================================================================

}; }; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
