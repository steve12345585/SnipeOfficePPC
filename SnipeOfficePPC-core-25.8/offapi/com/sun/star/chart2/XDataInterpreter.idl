/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef com_sun_star_chart2_XDataInterpreter_idl
#define com_sun_star_chart2_XDataInterpreter_idl

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/PropertyValue.idl>
#include <com/sun/star/chart2/InterpretedData.idl>
#include <com/sun/star/chart2/data/XDataSource.idl>
#include <com/sun/star/chart2/XDataSeries.idl>

module com
{
module sun
{
module star
{
module chart2
{

/** offers tooling to interpret different data sources in a structural
    and chart-type-dependent way.
 */
interface XDataInterpreter  : ::com::sun::star::uno::XInterface
{
    /** Interprets the given data.

        @param aArguments
            Arguments that tell the template how to slice the given
            range.  The properties should be defined in a separate
            service.

            <p>For standard parameters that may be used, see the
            service <type>StandardDiagramCreationParameters</type>.
            </p>

        @param aSeriesToReUse
            use all the data series given here for the result before
            creating new ones.
     */
    InterpretedData interpretDataSource(
        [in] com::sun::star::chart2::data::XDataSource xSource,
        [in] sequence< com::sun::star::beans::PropertyValue > aArguments,
        [in] sequence< XDataSeries > aSeriesToReUse );

    /** Re-interprets the data given in <code>aInterpretedData</code>
        while keeping the number of data series and the categories.
     */
    InterpretedData reinterpretDataSeries( [in] InterpretedData aInterpretedData );

    /** parses the given data and states, if a
        <member>reinterpretDataSeries</member> call can be done
        without data loss.

        @return
            <TRUE/>, if the data given in
            <code>aInterpretedData</code> has a similar structure than
            the one required is used as output of the data interpreter.
     */
    boolean isDataCompatible( [in] InterpretedData aInterpretedData );

    /** Try to reverse the operation done in
        <member>interpretDataSource</member>.

        <p>In case <code>aInterpretedData</code> is the result of
        <member>interpretDataSource</member>( <code>xSource</code> ),
        the result of this method should be <code>xSource</code>.</p>
     */
    com::sun::star::chart2::data::XDataSource mergeInterpretedData( [in] InterpretedData aInterpretedData );
};

} ; // chart2
} ; // com
} ; // sun
} ; // star


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
