/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_i18n_XIndexEntrySupplier_idl__
#define __com_sun_star_i18n_XIndexEntrySupplier_idl__

#include <com/sun/star/lang/Locale.idl>

//============================================================================

module com { module sun { module star { module i18n {

//============================================================================

/**
    supplies information on index entries to generate a "table of
    alphabetical index" for a given locale.
*/

published interface XIndexEntrySupplier : com::sun::star::uno::XInterface
{
    //------------------------------------------------------------------------
    /**
        returns the capital index key for sorting a table of indexes, to
        a given index entry, to a given <type
        scope="com::sun::star::lang">Locale</type> and to a given sort
        algorithm.

        <p> For example, in English locale it returns <b>"K"</b> for
        "keyboard"
     */
    string getIndexCharacter( [in] string aIndexEntry, [in]
    com::sun::star::lang::Locale aLocale, [in] string aSortAlgorithm );

    //------------------------------------------------------------------------
    /**
        returns the page number word of an index entry, where one page
        or more pages are combined to one page number entry, for a given
        <type scope="com::sun::star::lang">Locale</type>.

        <p> For example, in English locale it returns <br/>
        <b>"p."</b>  for <em>bMorePages</em> == <FALSE/> <br/>
        <b>"pp."</b> for <em>bMorePages</em> == <TRUE/> </p>
    */
    string getIndexFollowPageWord( [in] boolean bMorePages,
                                   [in] com::sun::star::lang::Locale aLocale );
};

//============================================================================
};};};};

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
