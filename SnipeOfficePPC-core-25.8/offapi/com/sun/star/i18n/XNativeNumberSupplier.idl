/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_i18n_XNativeNumberSupplier_idl__
#define __com_sun_star_i18n_XNativeNumberSupplier_idl__

#include <com/sun/star/lang/Locale.idl>
#include <com/sun/star/i18n/NativeNumberXmlAttributes.idl>

//=============================================================================

module com { module sun { module star { module i18n {

//=============================================================================

/** Methods to convert between strings of ASCII Arabic digits and native
    numeral strings.

     @since OOo 1.1.2
 */

published interface XNativeNumberSupplier : ::com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** Returns native number string for given number string.

        @param nNativeNumberMode
            One of <type>NativeNumberMode</type> values.
     */

    string getNativeNumberString( [in] string aNumberString,
                    [in] ::com::sun::star::lang::Locale aLocale,
                    [in] short nNativeNumberMode );

    //-------------------------------------------------------------------------
    /** Check if the NatNum is valid for the given locale.

        @param nNativeNumberMode
            One of <type>NativeNumberMode</type> values.
     */

    boolean isValidNatNum( [in] ::com::sun::star::lang::Locale aLocale,
                    [in] short nNativeNumberMode );

    //-------------------------------------------------------------------------
    /** Convert a specific NatNum/Locale combination to attributes used
        in the XML file format.

        @param nNativeNumberMode
            One of <type>NativeNumberMode</type> values.
     */

    NativeNumberXmlAttributes convertToXmlAttributes(
            [in] ::com::sun::star::lang::Locale aLocale,
            [in] short nNativeNumberMode );

    //-------------------------------------------------------------------------
    /** Convert XML attributes to a NatNum value.

        @returns
            One of <type>NativeNumberMode</type>
     */

    short convertFromXmlAttributes( [in] NativeNumberXmlAttributes aAttr );

};

//=============================================================================
}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
