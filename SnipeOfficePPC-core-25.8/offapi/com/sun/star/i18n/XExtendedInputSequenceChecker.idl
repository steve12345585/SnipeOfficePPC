/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_i18n_XExtendedInputSequenceChecker_idl__
#define __com_sun_star_i18n_XExtendedInputSequenceChecker_idl__

#include <com/sun/star/i18n/XInputSequenceChecker.idl>

//=============================================================================

module com { module sun { module star { module i18n {

//=============================================================================


/**
    This interface perform input sequence correction for the languages like Thai and Hindi

    <p> It is derived from
    <type scope="::com::sun::star::i18n">XInputSequenceChecker</type> and
    provides additional functionality to correct input sequence.</p>

     @since OOo 2.0.1
 */
published interface XExtendedInputSequenceChecker : ::com::sun::star::i18n::XInputSequenceChecker
{
    /** @returns
            Next nPos, or length of aText if nothing is corrected.

        @param nInputCheckMode
            One of <type>InputSequenceCheckMode</type> constants.
    */
    long correctInputSequence( [inout] string aText, [in] long nPos,
                [in] char cInputChar, [in] short nInputCheckMode );
};

//=============================================================================
}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
