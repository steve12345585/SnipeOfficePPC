/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_xforms_XFormsUIHelper1_idl__
#define __com_sun_star_xforms_XFormsUIHelper1_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/xml/dom/XNode.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/container/XSet.idl>
#include <com/sun/star/xforms/XDataTypeRepository.idl>
#include <com/sun/star/xml/dom/XDocument.idl>
#include <com/sun/star/xml/dom/XNode.idl>
#include <com/sun/star/frame/XModel.idl>
#include <com/sun/star/xforms/XModel.idl>


//=============================================================================

module com {  module sun {  module star {  module xforms {

//=============================================================================

/** provide several helper methods for the UI

    <b>This interfaces is for UI use only, and will likely be unsupported in
    future versions.</p>
*/
interface XFormsUIHelper1
{
    string getDefaultServiceNameForNode( [in] com::sun::star::xml::dom::XNode xNode );

    string getDefaultBindingExpressionForNode( [in] com::sun::star::xml::dom::XNode xNode );

    string getNodeDisplayName( [in] com::sun::star::xml::dom::XNode xNode,
                               [in] boolean bDetail );

    string getNodeName( [in] com::sun::star::xml::dom::XNode xNode );

    string getBindingName( [in] com::sun::star::beans::XPropertySet xBinding,
                           [in] boolean bDetail );

    string getSubmissionName( [in] com::sun::star::beans::XPropertySet xSubm,
                              [in] boolean bDetail );

    // Creates a new binding based on the one passed as argument.
    // The new binding does *not* contribute to the MIPs table and acts
    // as a property set in disguise, which is what the UI needs this object for...
    com::sun::star::beans::XPropertySet cloneBindingAsGhost( [in] com::sun::star::beans::XPropertySet binding );

    void removeBindingIfUseless( [in] com::sun::star::beans::XPropertySet xBinding );

    // handle instances

    com::sun::star::xml::dom::XDocument newInstance( [in] string sName,
                      [in] string sURL,
                      [in] boolean bURLOnce );

    void renameInstance( [in] string sFrom, [in] string sTo,
                      [in] string sURL,
                      [in] boolean bURLOnce );

    void removeInstance( [in] string sName );


    // handle models
    com::sun::star::xforms::XModel newModel( [in] com::sun::star::frame::XModel xModel,
                   [in] string sName );
    void renameModel( [in] com::sun::star::frame::XModel xModel,
                      [in] string sFrom, [in] string sTo );
    void removeModel( [in] com::sun::star::frame::XModel xModel,
                      [in] string sName );


    // DOM helpers
    com::sun::star::xml::dom::XNode
        createElement( [in] com::sun::star::xml::dom::XNode xParent,
                       [in] string sName );
    com::sun::star::xml::dom::XNode
        createAttribute( [in] com::sun::star::xml::dom::XNode xParent,
                         [in] string sName );

    com::sun::star::xml::dom::XNode renameNode(
        [in] com::sun::star::xml::dom::XNode xNode,
        [in] string sName );

    com::sun::star::beans::XPropertySet getBindingForNode(
        [in] com::sun::star::xml::dom::XNode xNode,
        [in] boolean bCreate );

    void removeBindingForNode(
        [in] com::sun::star::xml::dom::XNode xNode );

    string getResultForExpression(
        [in] com::sun::star::beans::XPropertySet xBinding,
        [in] boolean bIsBindingExpression,
        [in] string sExpression );

    boolean isValidXMLName( [in] string sName );

    boolean isValidPrefixName( [in] string sName );

    void setNodeValue(
        [in] com::sun::star::xml::dom::XNode xNode,
        [in] string sValue );

};

//=============================================================================

}; }; }; };

/*=============================================================================

=============================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
