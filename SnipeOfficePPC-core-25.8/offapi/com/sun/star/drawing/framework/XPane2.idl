/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_drawing_framework_XPane2_idl__
#define __com_sun_star_drawing_framework_XPane2_idl__

#include <com/sun/star/accessibility/XAccessible.idl>

module com { module sun { module star { module drawing { module framework {

/** An extension of the XPane interface that adds support for
    a) showing and hiding the windows that internally belong to the pane and
    b) setting the accessibility object.
    This is typically an optional interface.
*/
interface XPane2
{
    /** Return whether all windows that are used to implement the pane are
        visible.
        @Returns <TRUE> when all windows of the pane are visible.
    */
    boolean isVisible ();

    /** Hide or show the pane.  If there is more than one window used to
        implement the pane then it is left to the implementation if one,
        some, or all windows are hidden or shown as long as the pane becomes
        hidden or visible.
        @param bIsVisible
            When <TRUE> then show the pane.  Hide it otherwise.
    */
    void setVisible ([in] boolean bIsVisible);

    /** Set the accessibility object for the pane. When there is more than
        one window used to implement the pane then the given accessibility
        object is usually set at the topmost window.  However, the details
        are implementation dependent.
        @param xAccessible
            May be an empty reference.
    */
    void setAccessible ([in] ::com::sun::star::accessibility::XAccessible xAccessible);

    /** Return the accessibility object that is currently associated with
        the windows that implement the pane.
    */
    ::com::sun::star::accessibility::XAccessible getAccessible ();
};

}; }; }; }; }; // ::com::sun::star::drawing::framework

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
