/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_drawing_XLayerManager_idl__
#define __com_sun_star_drawing_XLayerManager_idl__

#include <com/sun/star/container/XIndexAccess.idl>

#include <com/sun/star/drawing/XLayer.idl>

#include <com/sun/star/container/NoSuchElementException.idl>

#include <com/sun/star/drawing/XShape.idl>


//=============================================================================

 module com {  module sun {  module star {  module drawing {

//=============================================================================

/** This interface makes it possible to access and manage the
    <type>Layer</type>s of a document.

    @see LayerManager
 */
published interface XLayerManager: com::sun::star::container::XIndexAccess
{
    //-------------------------------------------------------------------------

    /** creates a new <type>Layer</type>

        @param nIndex
            the index at which the new layer is inserted

        @returns
            the new created <type>Layer</type>
     */
    com::sun::star::drawing::XLayer insertNewByIndex( [in] long nIndex );

    //-------------------------------------------------------------------------

    /** removes a <type>Layer</type> and all <type>Shape</type>s on
        this <type>Layer</type>.

        @param xLayer
            this <type>Layer</type> will be removed and disposed
     */
    void remove( [in] com::sun::star::drawing::XLayer xLayer )
            raises( com::sun::star::container::NoSuchElementException );

    //-------------------------------------------------------------------------

    /** attaches a <type>Shape</type> to the given <type>Layer</type>.

        @param xShape
            this is the <type>Shape</type> that will be attached to a <type>Layer</type>

        @param xLayer
            this is the <type>Layer</type> that will be attached to a <type>Shape</type>
     */
    void attachShapeToLayer( [in] com::sun::star::drawing::XShape xShape,
             [in] com::sun::star::drawing::XLayer xLayer );

    //-------------------------------------------------------------------------

    /** queries the <type>Layer</type> that a <type>Shape</type> is attached to

        @param xShape
            specifies the <type>Shape</type> for which the layer is requested.

        @returns
            the <type>Layer</type> to which the <type>Shape</type> is
            attached.

     */
    com::sun::star::drawing::XLayer getLayerForShape( [in] com::sun::star::drawing::XShape xShape );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
