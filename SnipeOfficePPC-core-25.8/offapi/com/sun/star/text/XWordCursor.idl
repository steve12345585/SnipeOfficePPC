/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_text_XWordCursor_idl__
#define __com_sun_star_text_XWordCursor_idl__

#include <com/sun/star/text/XTextCursor.idl>


//=============================================================================

 module com {  module sun {  module star {  module text {

//=============================================================================

/** makes it possible to move a cursor word by word.
 */
published interface XWordCursor: com::sun::star::text::XTextCursor
{
    //-------------------------------------------------------------------------

    /** determines if the cursor is positioned at the start of a word.
     */
    boolean isStartOfWord();

    //-------------------------------------------------------------------------

    /** determines if the cursor is positioned at the end of a word.
     */
    boolean isEndOfWord();

    //-------------------------------------------------------------------------

    /** moves the cursor to the next word.

        <p>Note: the function returning <true/> does not necessarily mean
        that the cursor is located at the next word, or any word at all!
        This may happen for example if it travels over empty paragraphs.</p>

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
     */
    boolean gotoNextWord( [in] boolean bExpand );

    //-------------------------------------------------------------------------

    /** moves the cursor to the previous word.

        <p>Note: the function returning <true/> does not necessarily mean
        that the cursor is located at the previous word, or any word at all!
        This may happen for example if it travels over empty paragraphs.</p>

        @returns
            <true/> if the cursor was moved. It returns <false/> it the
            cursor can not advance further.
     */
    boolean gotoPreviousWord( [in] boolean bExpand );

    //-------------------------------------------------------------------------

    /** moves the cursor to the end of the current word.

        @returns
            <true/> if the cursor is now at the end of a word,
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
    boolean gotoEndOfWord( [in] boolean bExpand );

    //-------------------------------------------------------------------------

    /** moves the cursor to the start of the current word.

        @returns
            <true/> if the cursor is now at the start of a word,
            <false/> otherwise. If <false/> was returned the cursor
            will remain at its original position.
     */
    boolean gotoStartOfWord( [in] boolean bExpand );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
