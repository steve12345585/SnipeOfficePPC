/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_text_XMultiTextMarkup_idl__
#define __com_sun_star_text_XMultiTextMarkup_idl__

#include <com/sun/star/container/XStringKeyMap.idl>
#include <com/sun/star/text/TextMarkupDescriptor.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>

//=============================================================================

module com {  module sun {  module star {  module text {

//=============================================================================

/** provides functionality to apply multiple text markups in one call.

    @since OOo 3.0.1
 */

interface XMultiTextMarkup
{
    //-------------------------------------------------------------------------
    /** submits multiple new markup ranges.

        <p>The main use of this function will probably be for proofreading to
        allow for setting the markup of all found errors in a sentence in a single
        call. For this the sequence needs to provide the markups for all errors along
        with the markup for the identified sentence boundaries.
        The order of those entries is arbitrary.</p>

        @param aMarkups
                a sequence of single text markups.

        @see com::sun::star::text::XTextMarkup
        @see com::sun::star::text::TextMarkupType

     */
    void commitMultiTextMarkup(
                    [in] sequence< com::sun::star::text::TextMarkupDescriptor > aMarkups )
            raises( com::sun::star::lang::IllegalArgumentException );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
