/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_text_XTextColumns_idl__
#define __com_sun_star_text_XTextColumns_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/text/TextColumn.idl>


//=============================================================================

 module com {  module sun {  module star {  module text {

//=============================================================================

// DocMerge from xml: interface com::sun::star::text::XTextColumns
/** manages columns within the object.



    <p>The values used are relative. So it is not necessary to know the
    width of the object. The sum of the relative width values depends on
    the object and is defined in "ReferenceValue."

    </p>
 */
published interface XTextColumns: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    // DocMerge from idl: method com::sun::star::text::XTextColumns::getReferenceValue
    /** @returns
                the sum of all values.

                <p>As described above, the width values are relative.
     */
    long getReferenceValue();

    //-------------------------------------------------------------------------

    // DocMerge from idl: method com::sun::star::text::XTextColumns::getColumnCount
    /** @returns
                the number of columns.
     */
    short getColumnCount();

    //-------------------------------------------------------------------------

    // DocMerge from xml: method com::sun::star::text::XTextColumns::setColumnCount
    /** sets the number of columns.



        <p>The minimum is 1 column.</p>
     */
    void setColumnCount( [in] short nColumns );

    //-------------------------------------------------------------------------

    // DocMerge from idl: method com::sun::star::text::XTextColumns::getColumns
    /** returns the column description of the object.
                @see TextColumn
     */
    sequence<com::sun::star::text::TextColumn> getColumns();

    //-------------------------------------------------------------------------

    // DocMerge from xml: method com::sun::star::text::XTextColumns::setColumns
    /** sets the descriptors of all columns.



        <p>The number of members in the sequence must be the same as the
        number of columns of the object.

        </p>@see TextColumn
     */
    void setColumns( [in] sequence<com::sun::star::text::TextColumn> Columns );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
