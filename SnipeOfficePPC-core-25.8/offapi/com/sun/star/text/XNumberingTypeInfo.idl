/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_text_XNumberingTypeInfo_idl__
#define __com_sun_star_text_XNumberingTypeInfo_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module text {

/** provides access to the numbering types that are supported by a component.
    <p>To be able to store unknown numbering types in a file format the numbering types
     correspond to an identifier.</p>
    @see <type scope="com::sun::star::text">NumberingRules</type>
    @see <type scope="com::sun::star::style">NumberingType</type>
    @version    1.0
    @author     <a href="mailto:oliver.specht@germany.sun.com">Oliver Specht</a>
*/
published interface XNumberingTypeInfo : com::sun::star::uno::XInterface
{
    /** returns the numbering type values that are supported by the component.
        @see
    */
    sequence<short> getSupportedNumberingTypes();
    /** returns the corresponding numbering type to an identifier.
    */
    short   getNumberingType([in]string NumberingIdentifier);
    /** determines whether an identifier is supported.
    */
    boolean hasNumberingType([in]string NumberingIdentifier);
    /** returns the corresponding identifier to a numbering type.
    */
    string  getNumberingIdentifier([in]short NumberingType);
};
};};};};

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
