/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_text_GraphicCrop_idl__
#define __com_sun_star_text_GraphicCrop_idl__


//=============================================================================

 module com {  module sun {  module star {  module text {

//=============================================================================

// DocMerge from xml: struct com::sun::star::text::GraphicCrop
/** describes the cropping of graphic objects.
    Cropping means to show only parts of the object.



    <p>Negative values cut the visible area; positive values
    extend the visible area by filling it with background color.
    The absolute sum of top and bottom crop must be smaller
    than the objects original height.  The absolute sum of the left and
    right crop must be smaller than the object's original width.

    </p>
    <p>If this property is applied to a graphic object, then this object
    will correct these values if necessary.
    </p>
 */
published struct GraphicCrop
{
    // DocMerge from xml: field com::sun::star::text::GraphicCrop::Top
    /** contains the top value to cut (if negative) or to extend (if positive)
     */
    long Top;

    //-------------------------------------------------------------------------

    // DocMerge from xml: field com::sun::star::text::GraphicCrop::Bottom
    /** contains the bottom value to cut (if negative) or to extend (if positive)
     */
    long Bottom;

    //-------------------------------------------------------------------------

    // DocMerge from xml: field com::sun::star::text::GraphicCrop::Left
    /** contains the left value to cut (if negative) or to extend (if positive)
     */
    long Left;

    //-------------------------------------------------------------------------

    // DocMerge from xml: field com::sun::star::text::GraphicCrop::Right
    /** contains the right value to cut (if negative) or to extend (if positive)
     */
    long Right;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
