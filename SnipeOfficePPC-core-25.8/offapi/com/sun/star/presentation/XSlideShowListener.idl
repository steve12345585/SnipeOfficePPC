/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_presentation_XSlideShowListener_idl__
#define __com_sun_star_presentation_XSlideShowListener_idl__

#include <com/sun/star/animations/XAnimationListener.idl>

module com {  module sun {  module star {  module presentation {

/** Listener interface to receive global slide show events.<p>

    @see XShapeEventListener

    @since OOo 3.0
 */
interface XSlideShowListener : ::com::sun::star::animations::XAnimationListener
{
    /** Notify that the slide show is paused
    */
    void paused();

    /** Notify that the slide show is resumed from a paused state */
    void resumed();

    /** Notify that a new slide starts to become visible. */
    void slideTransitionStarted();

    /** Notify that the slide transition of the current slide ended. */
    void slideTransitionEnded();

    /** Notify that the last animation from the main sequence
            of the current slide has ended. */
    void slideAnimationsEnded();

    /** Notify that the current slide has ended,
        e.g. the user has clicked on the slide.
        Calling displaySlide() twice will not issue this event.
        @param reverse
            For the default order (forward) this flag is <FALSE/>.
            When the main sequence was traversed in reverse order then this
            flag is <TRUE/>.
    */
    void slideEnded( [in] boolean reverse );

    /** Notifies that a hyperlink has been clicked.
        @param hyperLink hyperlink URL
     */
    void hyperLinkClicked( [in] string hyperLink );
};

}; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
