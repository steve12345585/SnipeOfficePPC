/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_logging_ConsoleHandler_idl__
#define __com_sun_star_logging_ConsoleHandler_idl__

#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/beans/NamedValue.idl>

//=============================================================================

module com { module sun { module star { module logging {

interface XConsoleHandler;

//=============================================================================

/** specifies a component implementing a log handler whose output
    channel is the processes console.

    @since OOo 2.3
 */
service ConsoleHandler : XConsoleHandler
{
    /// creates a <code>ConsoleHandler</code>
    create();

    /** creates an instance of the log handler, using generic settings

        @param Settings
            contains the initial settings for the log handler

            <p>The following settings are recognized and supported:
            <ul><li><code>Encoding</code> - denotes the initial value of the <member>XLogHandler::Encoding</member></li>
                <li><code>Formatter</code> - denotes the initial value of the <member>XLogHandler::Formatter</member></li>
                <li><code>Level</code> - denotes the initial value of the <member>XLogHandler::Level</member></li>
                <li><code>Threshold</code> - denotes the initial value of the <member>XConsoleHandler::Threshold</member></li>
            </ul></p>

        @throws ::com::sun::star::lang::IllegalArgumentException
            if <arg>Settings</args> contains arguments with names other than in the list above, or
            settings whose value is of the wrong type.
    */
    createWithSettings( [in] sequence< ::com::sun::star::beans::NamedValue > Settings )
        raises ( ::com::sun::star::lang::IllegalArgumentException );
};

//=============================================================================

}; }; }; };

//=============================================================================

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
