/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_setup_ProductRegistration_idl__
#define __com_sun_star_setup_ProductRegistration_idl__

#include <com/sun/star/task/JobExecutor.idl>
#include <com/sun/star/task/XJob.idl>

module com {  module sun {  module star {  module setup {

/** provides a mechanism for registering the product.

    <p>Two main functionalities are covered by this service:
    <ul><il><em>Triggering Online Registration</em><br/>
            If, by any user interface of your choice, the user tells she wants to register
            their product copy, ProductRegistration is the service of your choice.
        </il><br/>
        <il><em>Executing Registration Requests</em><br/>
            ProductRegistration allows to remind your users to register, using a dialog with various
            choices.
        </il>
    </ul></p>

    @since OOo 1.1.2
*/
published service ProductRegistration
{
    /** allows to trigger certain events.

        <p>The string argument of <method scope="com::sun::star::task">XJobExecutor::trigger</method> is
            used to determine the type of the event. Currently supported events are:<br/>
            <ul><li><b>RegistrationRequired</b><br/>
                    Determines that the registration is required to be executed.<br/>
                    This is usually triggered by some user interaction, for instance upon choosing a menu item
                    called <em>Registration</em>.</p>
                </li>
            </ul>
        </p>
    */
    service com::sun::star::task::JobExecutor;

    /** allows the registration request to be scheduled automatically.

        <p>There are processes which allow to schedule events and jobs, for instance there
        can be configuration settings scheduling which operations are to be executed upon an program
        startup. Such processes usually require the jobs to be executed to support the
        <type scope="com::sun::star::task">XJob</type> interface.</p>

        <p>That's why this service supports the <type scope="com::sun::star::task">XJob</type>, too.<br/>
        Calling the <method scope="com::sun::star::task">XJob::execute</method> method results in displaying a
        dialog which asks the user to register. This is done once per session, means you need to restart the
        process which called this.</p>

        <p>At the moment, there is no specification about how to use the arguments given in the
        <method scope="com::sun::star::task">XJob::execute</method> method, but this may change in future versions of the service
        descriptions, so to keep your implementation compatible, you should not use these arguments.</p>
    */
    interface com::sun::star::task::XJob;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
