/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_view_XRenderable_idl__
#define __com_sun_star_view_XRenderable_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/PropertyValue.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>

//=============================================================================

module com {  module sun {  module star {  module view {

//=============================================================================

/** represents something that can be rendered.

    @since OOo 1.1.2
 */
published interface XRenderable : com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** @returns
            the count of renderers (based on paper count of a document, for example).

        <p> If a selection is given, the count has to be calculated
            based on this selection. The other methods of this interface
            will rely on this value if called.

        <p> If the selection contains a valid XModel interface,
            it is assumed that the whole document should be rendered.
            If the selection is empty, nothing should be rendered.

        @see RenderOptions
     */
    long getRendererCount( [in] any aSelection, [in] sequence<com::sun::star::beans::PropertyValue> xOptions )
            raises( com::sun::star::lang::IllegalArgumentException );

    //-------------------------------------------------------------------------

    /** @returns
            a descriptor of the specific renderer.

        <p> returns the specific renderer properties based on the given selection.

        <p> If the selection contains a valid XModel interface,
            it is assumed that the whole document should be rendered.
            If the selection is empty, nothing should be rendered.

        @see RenderDescriptor
        @see RenderOptions
     */
    sequence<com::sun::star::beans::PropertyValue> getRenderer( [in] long nRenderer, [in] any aSelection, [in] sequence<com::sun::star::beans::PropertyValue> xOptions )
            raises( com::sun::star::lang::IllegalArgumentException );

    //-------------------------------------------------------------------------

    /** renders the object.

        <p> renders the object with the specific renderer based on the given selection.

        <p> If the selection contains a valid XModel interface,
            it is assumed that the whole document should be rendered.
            If the selection is empty, nothing should be rendered.

        @see RenderOptions
     */
    void render( [in] long nRenderer, [in] any aSelection, [in] sequence<com::sun::star::beans::PropertyValue> xOptions )
            raises( com::sun::star::lang::IllegalArgumentException );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
