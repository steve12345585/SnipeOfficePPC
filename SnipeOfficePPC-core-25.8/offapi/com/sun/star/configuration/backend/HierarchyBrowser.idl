/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_backend_HierarchyBrowser_idl__
#define __com_sun_star_configuration_backend_HierarchyBrowser_idl__

#include <com/sun/star/task/XJob.idl>

//=============================================================================

module com { module sun { module star { module configuration { module backend {

//=============================================================================

/**
    allows scanning a configuration data repository for available components .

    @since OOo 1.1.2
*/
published service HierarchyBrowser
{
    //-------------------------------------------------------------------------

    /** allows executing a scan of the repository

        <p> The repository to browse is selected by arguments passed to
            <member scope="com::sun::star::task">XJob::execute()</member>.
            The names and meanings of such arguments depend on
            the implementation. Each implementation must document such arguments.
        </p>

        <p> The following argument to
            <member scope="com::sun::star::task">XJob::execute()</member>
            must be supported by all implementations:
        <dl>
            <dt><code>ExcludeComponents</code> : <atom dim="[]">string</atom> or <atom >string</atom></dt>
            <dd>A component or list of components that should be skipped
                and excluded from the result. If this argument appears multiple
                times it is handled cumulatively.
            </dd>
        </dl>
        </p>
        <p> The return value of
            <member scope="com::sun::star::task">XJob::execute()</member>
            is a list of components found. The format in which components are
            returned may depend on the implementation. Each implementation
            should support returning component identifiers that are compatible
            with some implementation of <type>Backend</type>.
        </p>
      */
    interface com::sun::star::task::XJob ;

    //-------------------------------------------------------------------------
} ;

//=============================================================================

} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
