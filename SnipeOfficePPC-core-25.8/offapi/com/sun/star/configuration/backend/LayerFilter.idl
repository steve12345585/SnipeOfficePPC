/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_configuration_backend_LayerFilter_idl__
#define __com_sun_star_configuration_backend_LayerFilter_idl__

#include <com/sun/star/configuration/backend/XLayer.idl>
#include <com/sun/star/lang/XInitialization.idl>

//==============================================================================

module com { module sun { module star { module configuration { module backend {

//==============================================================================

/**
  provides a filtered version of a configuration data <type>Layer</type>.

  <p> A layer filter wraps a source <type>XLayer</type> object and
     provides access to a filtered version of its data.
     The data read from the filter usually is produced from the source data
     by adding and removing elements or modifying values.
  </p>

  @see com::sun::star::configuration::backend::DataImporter
        Service that supports applying a <type>LayerFilter</type> to imported data.

  @since OOo 2.0
  */
published service LayerFilter
{
    //--------------------------------------------------------------------------

    /**
      provides read access to the filtered contents.

      <p> Method <member>XLayer::readData</member> will render a filtered version
         of the data produced by the same method of the source object.
     </p>
      */
    interface XLayer ;

    //--------------------------------------------------------------------------

    /**
      provides a means to set the source data for the filter.

      <p> Call <method scope="com::sun::star::lang">XInitialization::initialize</method>()
         with a single argument of type <type scope="com::sun::star::beans">NamedValue</type>,
         where <member scope="com::sun::star::beans">NamedValue::Name</member> is <code>"Source"</code>
         and <member scope="com::sun::star::beans">NamedValue::Value</member>
         is an object implementing <type>XLayer</type>.
     </p>
      */
    interface com::sun::star::lang::XInitialization ;

    //--------------------------------------------------------------------------
} ;

//==============================================================================

} ; } ; } ; } ; } ;

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
