/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_configuration_backend_XUpdatableLayer_idl__
#define __com_sun_star_configuration_backend_XUpdatableLayer_idl__

#include <com/sun/star/configuration/backend/XLayer.idl>
#include <com/sun/star/lang/NullPointerException.idl>
#include <com/sun/star/lang/WrappedTargetException.idl>
#include <com/sun/star/configuration/backend/MalformedDataException.idl>

//==============================================================================

module com { module sun { module star { module configuration { module backend {

//==============================================================================

/**
  Provides access to a read-write layer of configuration data for
  a given component and entity.

    @since OOo 1.1.2
  */
published interface XUpdatableLayer : XLayer
{
    //--------------------------------------------------------------------------

    /**
       Replaces the current layer with the layer given as input
       parameter.

       <p> After the replacement has been performed, reading the
           layer will return the new content. Some implementations
           may not support this, so after an update
           <member>XLayer::readData()</member> may fail.
        </p>

       @param aNewLayer
               replacement layer

       @throws com::sun::star::lang::NullPointerException
               if a <NULL/> handler is passed.
       @throws com::sun::star::lang::WrappedTargetException
               if an error occurs during the replacement.
       @throws com::sun::star::configuration::backend::MalformedDataException
               if the layer contains invalid data.
     */
    void replaceWith([in] XLayer aNewLayer)
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

    //--------------------------------------------------------------------------
} ;

} ; } ; } ; } ; } ;
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
