/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_backend_XSchema_idl__
#define __com_sun_star_configuration_backend_XSchema_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/configuration/backend/XSchemaHandler.idl>
#include <com/sun/star/lang/NullPointerException.idl>
#include <com/sun/star/lang/WrappedTargetException.idl>
#include <com/sun/star/configuration/backend/MalformedDataException.idl>

//=============================================================================

module com { module sun { module star { module configuration { module backend {

//=============================================================================

/**
  Handles access to the elements of a component schema,
  i.e its templates and its component definition.

    @since OOo 1.1.2
*/
published interface XSchema : ::com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /**
      Describes the full schema (templates + component) to a
      <type>XSchemaHandler</type>.

      @param aHandler
            schema handler that will receive calls
            describing the contents of the templates
            and the component definition

      @throws com::sun::star::lang::NullPointerException
              if a <NULL/> handler is passed.
      @throws com::sun::star::lang::WrappedTargetException
              if an error occurs in the access to or processing of the data or
              if a subsequent call to any of the <type>XSchema</type>methods is made.
              The elements of a component schema are only parsed once,a repeat call
              leads to exception.
      @throws com::sun::star::configuration::backend::MalformedDataException
              if the data read from the layer is rejected as invalid by the
              <type>XSchemaHandler</type>.
    */
    void readSchema([in] XSchemaHandler aHandler)
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

    //-------------------------------------------------------------------------

    /**
      Describes only the component definition to a <type>XSchemaHandler</type>.

      @param aHandler
            schema handler that will receive calls
            describing the contents of the component
            definition

      @throws com::sun::star::lang::NullPointerException
              if a <NULL/> handler is passed.
      @throws com::sun::star::lang::WrappedTargetException
              if an error occurs in the access to or processing of the data or
              if a subsequent call to any of the <type>XSchema</type>methods is made.
              The elements of a component schema are only parsed once,a repeat call
              leads to exception.
      @throws com::sun::star::configuration::backend::MalformedDataException
              if the data read from the layer is rejected as invalid by the
              <type>XSchemaHandler</type>.
    */
    void readComponent([in] XSchemaHandler aHandler)
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

    //-------------------------------------------------------------------------

    /**
      Describes the component templates to a <type>XSchemaHandler</type>.

      @param aHandler
            schema handler that will receive calls
            describing the contents of the templates

      @throws com::sun::star::lang::NullPointerException
              if a <NULL/> handler is passed.
      @throws com::sun::star::lang::WrappedTargetException
              if an error occurs in the access to or processing of the data or
              if a subsequent call to any of the <type>XSchema</type>methods is made.
              The elements of a component schema are only parsed once,a repeat call
              leads to exception.
      @throws com::sun::star::configuration::backend::MalformedDataException
              if the data read from the layer is rejected as invalid by the
              <type>XSchemaHandler</type>.
    */
    void readTemplates([in] XSchemaHandler aHandler)
        raises (com::sun::star::lang::NullPointerException,
                com::sun::star::lang::WrappedTargetException,
                MalformedDataException) ;

    //-------------------------------------------------------------------------
} ;

//=============================================================================

} ; } ; } ; } ; } ;
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
