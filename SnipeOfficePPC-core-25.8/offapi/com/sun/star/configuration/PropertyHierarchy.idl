/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_PropertyHierarchy_idl__
#define __com_sun_star_configuration_PropertyHierarchy_idl__

#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/beans/XMultiPropertySet.idl>
#include <com/sun/star/beans/XHierarchicalPropertySet.idl>
#include <com/sun/star/beans/XMultiHierarchicalPropertySet.idl>

//=============================================================================

module com { module sun { module star { module configuration {

//=============================================================================
/** provides access to and information about properties and subproperties
 of an implementation.

 <p>Properties in a property set may be full-fledged objects that have
 properties themselves (and so on recursively), thereby forming a hierarchy
 of properties. This service describes such a hierarchy, and allows
 direct access even to subproperties.
 </p>

 @see com::sun::star::beans::XProperty
 Properties of an implementation that are objects themselves will often
 implement <type scope="com::sun::star::beans">XProperty</type> to allow
 direct access to information about the object.
 If such objects have properties of their own, they should fully implement
 <type>PropertyHierarchy</type> again.
*/
published service PropertyHierarchy
{
/** provides access to and information about the immediate properties of an implementation.
*/
    interface com::sun::star::beans::XPropertySet;

/** provides access to and information about the immediate properties
 of an implementation.

 <p>This interface allows retrieving or setting multiple properties at once.
 Accesses are guaranteed to occur as single atomic operations even if
 multiple threads are accessing the object simultaneously.
 </p>
*/
    interface com::sun::star::beans::XMultiPropertySet;

/** provides access to and information about the whole hierarchy
 of properties and subproperties of an implementation.
*/
    interface com::sun::star::beans::XHierarchicalPropertySet;

/** provides access to and information about the whole hierarchy
 of properties and subproperties of an implementation.

 <p>This interface allows retrieving or setting multiple properties at once.
 Accesses are guaranteed to occur as single atomic operations even if
 multiple threads are accessing the object simultaneously.
 </p>
*/
    interface com::sun::star::beans::XMultiHierarchicalPropertySet;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
