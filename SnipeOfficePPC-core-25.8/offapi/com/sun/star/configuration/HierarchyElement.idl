/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_configuration_HierarchyElement_idl__
#define __com_sun_star_configuration_HierarchyElement_idl__

#include <com/sun/star/container/XNamed.idl>
#include <com/sun/star/container/XHierarchicalName.idl>
#include <com/sun/star/beans/XProperty.idl>
#include <com/sun/star/beans/XPropertyWithState.idl>
#include <com/sun/star/container/XChild.idl>

//=============================================================================

module com { module sun { module star { module configuration {

//=============================================================================
/** provides information about an element within a hierarchy.

 <p>The local name and the full hierarchical name can be retrieved.
 Attributes detailing the role of the element can be queried.
 The state of the element (regarding defaults) can be accessed.
 </p>

 <p>Implementations of this service usually also implement
 service <type>HierarchyAccess</type>, which concerns the complementary role
 of providing access to subelements of the hierarchy.
 </p>
*/
published service HierarchyElement
{
/** provides the complete hierarchical name of this element
 within the hierarchy tree.
*/
    interface com::sun::star::container::XHierarchicalName;

/** provides the local name of this element within its parent.

 <p><em>Renaming an element is generally not supported.</em></p>
*/
    interface com::sun::star::container::XNamed;

/** provides a property descriptor for this element.[optional]

 <p>This interface may be missing, if the hierarchy supports no traits that are
 described by <type scope="com::sun::star::beans">PropertyAttribute</type>
 values.
 </p>

 <p>If the parent of this object implements
 <type scope="com::sun::star::beans">XPropertySetInfo</type>, then this returns
 the same <type scope="com::sun::star::beans">Property</type> as the
 <type scope="com::sun::star::beans">XPropertySetInfo</type> of the parent.
 </p>
*/
    [optional] interface com::sun::star::beans::XProperty;

/** provides access to the default state of this element. [optional]

 <p>This interface may be missing, if the hierarchy supports access to
 a default state and values only for simple values or not at all.
 </p>

 <p>If the parent of this object implements
 <type scope="com::sun::star::beans">XPropertyState</type>, then members
 of this interface have the same effect as corresponding members of the parent.
 </p>

 <p>If an implementation is part of a <em>read-only</em> view of the hierarchy,
 attempts to change property states will fail.
 </p>
*/
    [optional] interface com::sun::star::beans::XPropertyWithState;

/** provides access to the parent of this element [optional].

 <p>This interface may be missing if this object is not obtained
 as a child or descendant of another tree node, for example, directly from a factory or provider.
 </p>

 <p><member scope="com::sun::star::container">XChild::getParent()</member>
 returns NULL, if this object is currently not contained in another node.
 </p>

 <p><em>Setting a different parent is, generally, not supported.</em></p>
*/
    [optional] interface com::sun::star::container::XChild;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
