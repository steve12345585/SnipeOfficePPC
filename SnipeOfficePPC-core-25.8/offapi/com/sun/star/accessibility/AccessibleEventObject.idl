/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_accessibility_AccessibleEventObject_idl__
#define __com_sun_star_accessibility_AccessibleEventObject_idl__

#include <com/sun/star/lang/EventObject.idl>

module com { module sun { module star { module accessibility {

/** this struct describes an accessible event, that is broadcasted from
    the <type>XAccessibleEventBroadcaster</type> and notified to
    <type>XAccessibleEventListener</type>.

    <p>It is usually implemented by <type>AccessibleContext</type>.

    @since OOo 1.1.2
*/
published struct AccessibleEventObject: ::com::sun::star::lang::EventObject
{
    /** specifies the type of this event.

        <p>For a list of possible events see <type>AccessibleEventId</type>.
     */
    short EventId;

    /** for events that specifies a value change, this is
        the new value.

        Depending on the <member>EventId</member>, this can be void.
    */
    any NewValue;

    /** for events that specifies a value change, this is
        the old value.

        Depending on the <member>EventId</member>, this can be void.
    */
    any OldValue;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
