/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_ui_XUIConfigurationStorage_idl__
#define __com_sun_star_ui_XUIConfigurationStorage_idl__

#include <com/sun/star/embed/XStorage.idl>

//=============================================================================

module com { module sun { module star { module ui {

//=============================================================================

/** supplies functions to change or get information about the storage
    of a user interface configuration manager.

    @since OOo 2.0
*/

interface XUIConfigurationStorage : ::com::sun::star::uno::XInterface
{
    /** connects a storage to the user interface configuration manager
        which is used on subsequent calls of <member>load</member> and
        <member>store</member>.

        @param Storage
            all configuration data is loaded/stored from/into this storage.
            If the storage is in read/write mode <member>load</member>
            and <member>store</member> can be used otherwise only
            <member>load</member> is possible.

        <p>
        This call needs careful usage as data loss can occur. If the
        implementation has modified data and a new storage is set the
        implementation is not allowed to write back the data to the old
        storage. This must be done explicitly with <member>store</member>.
        In general a user interface configuration manager instance is
        created and initialize by the document model or the module user
        interface configuration supplier. Normally there is no need to
        set a storage for a user interface configuration manager. If a
        copy of the configuration data to another storage should be made,
        use <member>storeToStorage</member>.
        </p>
    */
    void setStorage( [in] ::com::sun::star::embed::XStorage Storage );

    /** checks if an instance has already a storage to load/store its data.

        @return
            <TRUE/> if the instance has a storage otherwise <FALSE/>.
    */
    boolean hasStorage();
};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
