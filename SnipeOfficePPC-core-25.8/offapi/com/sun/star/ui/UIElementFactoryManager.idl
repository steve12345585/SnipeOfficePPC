/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_ui_UIElementFactory_idl__
#define __com_sun_star_ui_UIElementFactory_idl__

#include <com/sun/star/lang/XMultiComponentFactory.idl>
#include <com/sun/star/ui/XUIElementFactoryRegistration.idl>

//=============================================================================

module com { module sun { module star { module ui {

//=============================================================================

/** specifies a user interface factory manager that controls all registered user
    interface element factories.

    <p>An implementation is usually obtained from a
    <type scope="com::sun::star::lang">ServiceManager</type>.
    </p>

    @since OOo 2.0
*/

service UIElementFactoryManager
{
    /** provides a function to create new instances of user interface elements.

        <p>
        A user interface element factory manager is also a user interface element factory. It
        retrieves the responsible user interface element factory from the provided arguments and passes
        the arguments to it.

        see @XUIElementFactory
        </p>
     */
    interface XUIElementFactory;

    /** provides functions to query, retrieve, register and deregister user interface element factories.
    */
    interface XUIElementFactoryRegistration;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
