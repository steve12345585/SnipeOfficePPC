/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ui_XContextMenuInterception_idl__
#define __com_sun_star_ui_XContextMenuInterception_idl__

#include <com/sun/star/uno/XInterface.idl>

module com {  module sun {  module star {  module ui {


 published interface XContextMenuInterceptor;
/** This interface enables an object to get interceptors registered that
 change context menus or prevent them from being executed.
 */
published interface XContextMenuInterception : ::com::sun::star::uno::XInterface
{
    /** registers an <type>XContextMenuInterceptor</type>, which will become
        the first interceptor in the chain of registered interceptors.
     */

    void registerContextMenuInterceptor( [in]XContextMenuInterceptor Interceptor);
    /** removes an <type>XContextMenuInterceptor</type> which was previously registered
        using <member>XContextMenuInterception::registerContextMenuInterceptor</member>.

        <p>The order of removals is arbitrary. It is not necessary to remove the last
        registered interceptor first.</p>
     */
    void releaseContextMenuInterceptor( [in]XContextMenuInterceptor Interceptor);
};
}; }; }; };
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
