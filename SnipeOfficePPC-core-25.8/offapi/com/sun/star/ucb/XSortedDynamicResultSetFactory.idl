/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XSortedDynamicResultSetFactory_idl__
#define __com_sun_star_ucb_XSortedDynamicResultSetFactory_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/ucb/XDynamicResultSet.idl>
#include <com/sun/star/ucb/NumberedSortingInfo.idl>
#include <com/sun/star/ucb/XAnyCompareFactory.idl>

//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** Provides a method to create an <type>XDynamicResultSet</type> which
    will be sorted according to the given sorting options.
*/

published interface XSortedDynamicResultSetFactory: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** creates a sorted <type>XDynamicResultSet</type> depending on internal
        data, an (unsorted) XDynamicResultSet and the sorting info.

        @returns
        a sorted result set.

        @param Source
        the (unsorted) source result set

        @param Info
        the sort criteria

        @param CompareFactory
        a factory for compare objects.
    */
    com::sun::star::ucb::XDynamicResultSet  createSortedDynamicResultSet(
                [in] com::sun::star::ucb::XDynamicResultSet Source,
                [in] sequence<com::sun::star::ucb::NumberedSortingInfo> Info,
                [in] com::sun::star::ucb::XAnyCompareFactory CompareFactory );
};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
