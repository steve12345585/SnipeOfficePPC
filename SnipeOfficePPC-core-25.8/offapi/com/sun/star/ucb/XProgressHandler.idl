/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_XProgressHandler_idl__
#define __com_sun_star_ucb_XProgressHandler_idl__

#include <com/sun/star/uno/XInterface.idl>


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** Handle a tasks notification that it has made some progress.
*/
published interface XProgressHandler: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** The task notifies the handler that it has started some new activity
        (possibly a sub-activity of another activity already making progress;
        therefore, these notifications behave in a stack-like manner).

        @param Status  An object representing the new activity.  There has to
        be an agreement between caller and callee of methods
        <member>XProgressHandler::push</member> and
        <member>XProgressHandler::update</member> as to which Status
        arguments are meaningful.  For example, a <atom>string</atom> argument
        to <member>XProgressHandler::push</member> should be used to transport
        some status text that describes the progress being made (possibly
        followed by one or more <member>XProgressHandler::update</member>s with
        <atom>string</atom> arguments, if the appropriate status text changes
        as progress is being made).
    */
    void push([in] any Status);

    //-------------------------------------------------------------------------
    /** The task notifies the handler that its current activity is making
        progress.

        @param Status  An object representing the progress made.  See the
        documentation of <member>XProgressHandler::push</member> for more
        information.
    */
    void update([in] any Status);

    //-------------------------------------------------------------------------
    /** The task notifies the handler that it has finished its current
        activity.
    */
    void pop();
};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
