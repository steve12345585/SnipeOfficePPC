/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_RuleAction_idl__
#define __com_sun_star_ucb_RuleAction_idl__


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/**  These are the possible values for <member>Rule::Action</member>.

     @see RuleSet
*/
published constants RuleAction
{
    //-------------------------------------------------------------------------
    /** "None" - Do nothing.
    */
    const short NONE = 0;

    //-------------------------------------------------------------------------
    /** "Show" - Shows object when term matches.
    */
    const short SHOW = 1;

    //-------------------------------------------------------------------------
    /** "Hide" - Hides object when term matches.
    */
    const short HIDE = 2;

    //-------------------------------------------------------------------------
    /** "Mark" - Marks object when term matches.
    */
    const short MARK = 3;

    //-------------------------------------------------------------------------
    /** "UnMark" - Removes mark from object when term matches.
    */
    const short UNMARK = 4;

    //-------------------------------------------------------------------------
    /** "MarkRead" - Marks object as read when term matches.
    */
    const short MARKREAD = 5;

    //-------------------------------------------------------------------------
    /** "MarkUnRead" - Marks object as not read when term matches.
    */
    const short MARKUNREAD = 6;

    //-------------------------------------------------------------------------
    /** "Move" - Moves object to <member>Rule::Parameter</member> when term
        matches.
    */
    const short MOVE = 7;

    //-------------------------------------------------------------------------
    /** "Copy" - Copies object to <member>Rule::Parameter</member> when term
        matches.
    */
    const short COPY = 8;

    //-------------------------------------------------------------------------
    /** "Delete" - Deletes object when term matches.
    */
    const short DELETE = 9;

    //-------------------------------------------------------------------------
    /** "Link" - Creates a link to <member>Rule::Parameter</member> when term
        matches.
    */
    const short LINK = 10;

    //-------------------------------------------------------------------------
    /** "Forward" - Forwards object to <member>Rule::Parameter</member> when
        term matches.
    */
    const short FORWARD = 11;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
