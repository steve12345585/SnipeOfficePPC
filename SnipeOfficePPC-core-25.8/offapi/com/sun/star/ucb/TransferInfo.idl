/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_TransferInfo_idl__
#define __com_sun_star_ucb_TransferInfo_idl__


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** contains information needed to transfer objects from one location to another.

    <p>The transfer command is always called on the target folder. For a
    details description of the transfer command refer to the documentation
    of service <type>Content</type>.
*/
published struct TransferInfo
{
    //-------------------------------------------------------------------------
    /** contains the flags describing whether the data shall be moved
        instead of copied.
    */
    boolean MoveData;

    //-------------------------------------------------------------------------
    /** contains the URL of the source of the action (e.g. the URL of a
        file to move).
    */
    string SourceURL;

    //-------------------------------------------------------------------------
    /** contains the title of the transferred object, if it is different
        from the original one.

        <p>If this field is filled, for example, a file will be renamed
        while it is being transferred.</p>
    */
    string NewTitle;

    //-------------------------------------------------------------------------
    /** describes how to act in case of title clashes while transferring
        the data.

        <p>A title clash for instance occurs, if a file named "foo.txt" is
        to be transferred to a folder already containing another file named
        "foo.txt".

        <p>The value can be one of the <type>NameClash</type> constants.

        <p>Implementations that are not able to detect whether there is a
        clashing resource may ignore <member>NameClash::ERROR</member> and
        <member>NameClash::RENAME</member> always write the new data.
    */
    long NameClash;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
