/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_ucb_RecipientInfo_idl__
#define __com_sun_star_ucb_RecipientInfo_idl__

#include <com/sun/star/ucb/OutgoingMessageState.idl>


//=============================================================================

module com { module sun { module star { module ucb {

//=============================================================================
/** contains all information needed to send a message using one send protocol.

    <p>To send one message via two different protocols, two RecipientInfos
    are needed - to send one message to different users with one protocol,
    one RecipientInfo can be used.
*/
published struct RecipientInfo
{
    //-------------------------------------------------------------------------
    /** the protocol to use for sending (i.e. "NNTP", "SMTP", "VIM").
    */
    string ProtocolType;

    //-------------------------------------------------------------------------
    /** the current state of the message.
    */
    com::sun::star::ucb::OutgoingMessageState State;

    //-------------------------------------------------------------------------
    /** the recipient(s) (e.g. e-mail address/es).

        <p>Multiple addresses are separated by commas.
    */
    string To;

    //-------------------------------------------------------------------------
    /** the recipient(s) of a "carbon copy" (e.g. e-mail address/es).

        <p>Multiple addresses are separated by commas.
    */
    string CC;

    //-------------------------------------------------------------------------
    /** the recipient(s) of "blind carbon copy" (e.g. e-mail address/es).

        <p>Multiple addresses are separated by commas.
    */
    string BCC;

    //-------------------------------------------------------------------------
    /** the newsgroup(s) to which an article is be posted.

        <p>Multiple addresses are separated by commas.
    */
    string Newsgroups;

    //-------------------------------------------------------------------------
    /** the name of the server to be used for sending the message.
    */
    string Server;

    //-------------------------------------------------------------------------
    /** the user name to be used for authorizing on the send server.
    */
    string Username;

    //-------------------------------------------------------------------------
    /** the password to be used for authorizing on the send server.
    */
    string Password;

    //-------------------------------------------------------------------------
    /** the Post Office Path (VIM only).
    */
    string VIMPostOfficePath;

    //-------------------------------------------------------------------------
    /** string representing the last error (generated by send server).
    */
    string ProtocolErrorString;

    //-------------------------------------------------------------------------
    /** the number representing the last error (generated by send server).
    */
    long ProtocolErrorNumber;

    //-------------------------------------------------------------------------
    /** the count of tries to send a message. This count is <code>1</code>
        if the message was sent with the first try and increases with every
        unsuccessful retry.
    */
    long SendTries;

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
