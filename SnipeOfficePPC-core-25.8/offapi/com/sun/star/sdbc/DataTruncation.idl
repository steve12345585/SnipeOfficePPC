/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_DataTruncation_idl__
#define __com_sun_star_sdbc_DataTruncation_idl__

#include <com/sun/star/sdbc/SQLWarning.idl>

 module com {  module sun {  module star {  module sdbc {


/** reports a DataTruncation warning, on reads, or is thrown as a DataTruncation exception,
    on writes, when a data value is unexpectedly truncated.

    <p>
    The SQL state for a
    <code>DataTruncation</code>
    is
    <code>01004</code>
    .
    </p>
 */
published exception DataTruncation: SQLWarning
{

    /** is the index of the parameter or column value.
     */
    long Index;


    /** is
        <TRUE/>
        if a parameter value is truncated.
     */
    boolean IsParameter;


    /** is
        <TRUE/>
        if a read was truncated.
     */
    boolean DuringRead;


    /** contains the number of bytes of data that should have been transferred.
        This number may be approximate if data conversions were being
        performed. The value may be
        <code>-1</code>
        if the size is unknown.
     */
    long DataSize;


    /** contains the number of bytes of data actually transferred.
        The value may be
        <code>-1</code>
        if the size is unknown.
     */
    long TransferSize;
};

//=============================================================================

}; }; }; };
/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
