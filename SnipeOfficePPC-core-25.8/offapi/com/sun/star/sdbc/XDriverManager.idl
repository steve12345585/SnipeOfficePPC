/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XDriverManager_idl__
#define __com_sun_star_sdbc_XDriverManager_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/PropertyValue.idl>

#include <com/sun/star/sdbc/SQLException.idl>

 module com {  module sun {  module star {  module sdbc {

 published interface XConnection;
 published interface XDriver;


/** is the basic interface for managing a set of SDBC drivers.



    <p>
    When the method
    <member scope="com::sun::star::sdbc">XDriverManager::getConnection()</member>
    is called,
    the DriverManager will attempt to
    locate a suitable driver.

    </p>
    @see com::sun::star::sdbc::XDriver
     @see com::sun::star::sdbc::XConnection
 */
published interface XDriverManager: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** attempts to establish a connection to the given database URL.
        The DriverManager attempts to select an appropriate driver from
        the set of registered JDBC/SDBC drivers.
        @param url
            a database url of the form  sdbc:subprotocol:subname
        @returns
            the Connection object
        @throws SQLException
            if a database access error occurs.
     */
    XConnection getConnection([in]string url)
        raises (SQLException);
    //-------------------------------------------------------------------------

    /** attempts to establish a connection to the given database URL.
        The DriverManager attempts to select an appropriate driver from
        the set of registered JDBC/SDBC drivers.
        @param url
            a database url of the form  sdbc:subprotocol:subname
        @param info
            a list of arbitrary string tag/value pairs as connection arguments;
            normally at least a "user" and "password" property should be included
            @see com::sun::star::sdbc::ConnectionProperties
        @returns
            the Connection object
        @throws SQLException
            if a database access error occurs.
     */
    XConnection getConnectionWithInfo([in]string url,
            [in]sequence<com::sun::star::beans::PropertyValue> info)
        raises (SQLException);
    //-------------------------------------------------------------------------

    /** sets the maximum time in seconds that a driver will wait
        while attempting to connect to a database.
        @param seconds
            the login time limit in seconds

        @throws SQLException
            if a database access error occurs.
     */
    void setLoginTimeout([in]long seconds);
    //-------------------------------------------------------------------------

    /** gets the maximum time in seconds that a driver can wait
        when attempting to login to a database.
        @returns
            the driver login time limit in seconds

        @throws SQLException
            if a database access error occurs.
     */
    long getLoginTimeout();
};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
