/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XPreparedStatement_idl__
#define __com_sun_star_sdbc_XPreparedStatement_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/sdbc/SQLException.idl>

 module com {  module sun {  module star {  module sdbc {

 published interface XConnection;
 published interface XResultSet;


/** provides the possibility of executing a precompiled SQL statement.


    <p>
    A SQL statement is pre-compiled and stored in a PreparedStatement object.
    This object can then be used to efficiently execute this statement multiple
    times.
    </p>
 */
published interface XPreparedStatement: com::sun::star::uno::XInterface
{

    /** executes the SQL query in this
        <code>PreparedStatement</code>
        object and returns the result set generated by the query.
        @returns
            the ResultSet object
        @throws SQLException
            if a database access error occurs.
     */
    XResultSet executeQuery() raises (SQLException);
    //-------------------------------------------------------------------------

    /** executes the SQL INSERT, UPDATE or DELETE statement in this
        <type scope="com::sun::star::sdbc">PreparedStatement</type>
        object.
        <br/>
        In addition, SQL statements that return nothing, such as
        SQL DDL statements, can be executed.
        @returns
            either the row count for INSERT, UPDATE or DELETE statements; or 0 for SQL statements that return nothing
        @throws SQLException
            if a database access error occurs.
     */
    long executeUpdate() raises (SQLException);
    //-------------------------------------------------------------------------

    /** executes any kind of SQL statement.


        <p>
        Some prepared statements return multiple results; the execute
        method handles these complex statements as well as the simpler
        form of statements handled by executeQuery and executeUpdate.
        </p>
        @returns
            <TRUE/> if successful
        @throws SQLException
            if a database access error occurs.
     */
    boolean execute() raises (SQLException);
    //-------------------------------------------------------------------------

    /** returns the
        <type scope="com::sun::star::sdbc">Connection</type>
        object
        that produced this
        <type scope="com::sun::star::sdbc">Statement</type>
        object.
        @returns
            the Connection object
        @throws SQLException
            if a database access error occurs.
     */
    XConnection getConnection() raises (SQLException);
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
