/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_sdbc_XMultipleResults_idl__
#define __com_sun_star_sdbc_XMultipleResults_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/sdbc/SQLException.idl>

 module com {  module sun {  module star {  module sdbc {

 published interface XResultSet;


/** is used for inspecting multiple results produced by the execution of a
    SQL statement.


    <p>
    Under some (uncommon) situations a single SQL statement may return
    multiple result sets and/or update counts.  Normally you can ignore
    this unless you are (1) executing a stored procedure that you know may
    return multiple results or (2) you are dynamically executing an
    unknown SQL string. The methods
    <member scope="com::sun::star::sdbc">XMultipleResults::getMoreResults()</member>
    ,
    <member scope="com::sun::star::sdbc">XMultipleResults::getResultSet()</member>
    and
    <member scope="com::sun::star::sdbc">XMultipleResults::getUpdateCount()</member>
    let you navigate through multiple results.

    </p>
    @see com::sun::star::sdbc::XStatement
     @see com::sun::star::sdbc::XPreparedStatement
 */
published interface XMultipleResults: com::sun::star::uno::XInterface
{

    /** returns the current result as a
        <type scope="com::sun::star::sdbc">ResultSet</type>
        object.
        This method should be called only once per result.
        @returns
            the ResultSet object
        @throws SQLException
            if a database access error occurs.
     */
    XResultSet getResultSet() raises (SQLException);
    //-------------------------------------------------------------------------

    /** returns the current result as an update count.


        <p>
        If the result is a ResultSet or there are no more results, -1
        is returned. This method should be called only once per result.
        </p>
        @returns
            the current result as an update count.
        @throws SQLException
            if a database access error occurs.
     */
    long getUpdateCount() raises (SQLException);
    //-------------------------------------------------------------------------

    /** moves to a Statement's next result. It returns <TRUE/> if
        this result is a ResultSet.  This method also implicitly
        closes any current ResultSet obtained with getResultSet.

        <p>
        There are no more results when <code>(!getMoreResults() &amp;amp;&amp;amp;
        getUpdateCount() == -1)</code>.

        </p>
        @returns
            <TRUE/> if there exists more ResultSet objects
        @throws SQLException
            if a database access error occurs.
     */
    boolean getMoreResults() raises (SQLException);
};

//=============================================================================

}; }; }; };

/*===========================================================================
===========================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
