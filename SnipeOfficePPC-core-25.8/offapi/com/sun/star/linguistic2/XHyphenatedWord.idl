/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_linguistic2_XHyphenatedWord_idl__
#define __com_sun_star_linguistic2_XHyphenatedWord_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/Locale.idl>


//=============================================================================

module com { module sun { module star { module linguistic2 {

//=============================================================================
/** gives information obtained by a successful hyphenation attempt.

    <P>This interface is used as a return value for some of the hyphenator
    functions.</P>

    @see    <type scope="com::sun::star::linguistic2">XHyphenator</type>
*/
published interface XHyphenatedWord : com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /**
         @returns
             the word that was hyphenated.
     */
    string getWord();

    //-------------------------------------------------------------------------
    /**
         @returns
            the language of the hyphenated word.

        @see    com::sun::star::lang::Locale
    */
    com::sun::star::lang::Locale getLocale();

    //-------------------------------------------------------------------------
    /**
        @returns
            the position where hyphenation was applied in the word.

        <P>The value has to be in the range from 0 (after the first character)
         to n-2 (before the last character) where n is the length of
         the word.</P>
    */
    short getHyphenationPos();

    //-------------------------------------------------------------------------
    /**
         @returns
             the hyphenated word as it should be written (without the hyphen
             character).
     */
    string getHyphenatedWord();

    //-------------------------------------------------------------------------
    /**
        @returns
            the position of the hyphen in the hyphenated word.

        <P>The value has to be in the range from 0 (after the first character)
         to m-2 (before the last character) where m is the length of
         the hyphenated word.</P>
    */
    short getHyphenPos();

    //-------------------------------------------------------------------------
    /** is used to query if the hyphenation result is an alternative spelling.

         <p>A hyphenation result is an alternative spelling if the hyphenated
         word is different from the word that was hyphenated.</p>

         @returns
             <TRUE/> if it is an alternative spelling, <FALSE/> otherwise.
    */
    boolean isAlternativeSpelling();

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
