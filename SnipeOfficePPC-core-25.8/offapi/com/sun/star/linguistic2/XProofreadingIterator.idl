/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_linguistic2_XProofreadingIterator_idl__
#define __com_sun_star_linguistic2_XProofreadingIterator_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>
#include <com/sun/star/text/XFlatParagraphIteratorProvider.idl>
#include <com/sun/star/text/XFlatParagraph.idl>
#include <com/sun/star/lang/Locale.idl>
#include <com/sun/star/linguistic2/ProofreadingResult.idl>

//=============================================================================

module com {  module sun {  module star {  module linguistic2 {

//=============================================================================
/** API for the proofreading iterator that mediates between the document and the proofreader.

    @since  OOo 3.0.1
*/
interface XProofreadingIterator: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** start proofreading and automatically process the whole text

        @param  xDoc
                the text document.

        @param  xIteratorProvider
                the flat paragraph iterator provider.

        @throws IllegalArgumentException
                when any argument is wrong.
    */
    void startProofreading( [in] com::sun::star::uno::XInterface xDocument,
                    [in] com::sun::star::text::XFlatParagraphIteratorProvider xIteratorProvider )
            raises( com::sun::star::lang::IllegalArgumentException );

    //-------------------------------------------------------------------------
    /** start proofreading from a given position

        @param  xDoc
                the document.

        @param  xStartPara
                the single flat paragraph to be checked.

        @param  nErrorPosInPara
                the given index.

        @throws IllegalArgumentException
                when any argument is wrong.
    */

    ProofreadingResult checkSentenceAtPosition( [in] com::sun::star::uno::XInterface xDocument,
                    [in] com::sun::star::text::XFlatParagraph xFlatParagraph,
                    [in] string aText,
                    [in] com::sun::star::lang::Locale aLocale,
                    [in] long nStartOfSentencePosition,
                    [in] long nSuggestedBehindEndOfSentencePosition,
                    [in] long nErrorPositionInParagraph )
            raises( com::sun::star::lang::IllegalArgumentException );

    //-------------------------------------------------------------------------
    /** clears the list of ignored rules for each proofreader
    */
    void resetIgnoreRules();

    //-------------------------------------------------------------------------
    /** checks if the given document is currently being checked

        @param  xDoc
                the document.

        @returns
                if the document is currently being checked.
    */
    boolean isProofreading( [in] com::sun::star::uno::XInterface xDocument );
};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
