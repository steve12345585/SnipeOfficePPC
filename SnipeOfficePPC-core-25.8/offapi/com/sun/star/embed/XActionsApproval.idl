/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_embed_XActionsApproval_idl__
#define __com_sun_star_embed_XActionsApproval_idl__

#include <com/sun/star/uno/XInterface.idl>

//============================================================================

 module com {  module sun {  module star {  module embed {

//============================================================================
/** allows to request an approval for an action.

    <p>
    An implementation of this interface is usually provided to another object
    to allow this object to request an approval for actions. The list of
    possible actions must be documented in documentation of the object.
    </p>
 */
published interface XActionsApproval: com::sun::star::uno::XInterface
{
    //------------------------------------------------------------------------
    /** requests an approval for the specified action.

        @param nAction
            a value specifying the action that should be approved. Could take
            values from <type>Actions</type> constants set. The explicit set
            of the actions should be documented by the object that is going
            to use this interface for approval as for example
            <type>InstanceLocker</type> does.

        @return
            returns <TRUE/> in case the specified action is approved.
     */
    boolean approveAction( [in] long nAction );
};

//============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
