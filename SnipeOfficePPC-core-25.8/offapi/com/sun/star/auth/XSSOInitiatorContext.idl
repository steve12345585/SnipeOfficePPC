/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_auth_XSSOInitiatorContext_idl__
#define __com_sun_star_auth_XSSOInitiatorContext_idl__

#include <com/sun/star/auth/XSSOContext.idl>
#include <com/sun/star/auth/SSOExceptions.idl>

module com { module sun { module star { module auth {

/** represents an initiator side security context.
    <P>This context may be used to initialize authentication tokens to send to
    an acceptor and to authenticate any token sent back in response.

    @since OOo 1.1.2
 */
published interface XSSOInitiatorContext : ::com::sun::star::auth::XSSOContext
{
    /** initializes an SSO Token to send to the acceptor side and
        authenticates an SSO Token returned by the acceptor if the
        context supports mutual authentication.
        <P>
        init should be called only once for contexts which don't support
        mutual authentication and at most twice for contexts which do
        support mutual authentication. Additional calls produce undefined
        results.

        @param Token
        the SSO token received from the acceptor side in response to an
        authentication request. This token is ignored on the first call
        to init and should only be specified for the second call on a
        context supporting mutual authentication.

        @returns
        the sequence of bytes to be sent to the acceptor side as part of
        an authentication request. This sequence will be non zero length
        for the first call to init, zero length for the second call to init
        on a context supporting mutual authentication and undefined in all
        other cases.
     */
    sequence< byte > init(  [in] sequence< byte > Token )
        raises( InvalidArgumentException,
                InvalidCredentialException,
                InvalidContextException,
                AuthenticationFailedException );
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
