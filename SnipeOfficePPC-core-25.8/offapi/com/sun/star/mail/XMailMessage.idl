/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_mail_XMailMessage_idl__
#define __com_sun_star_mail_XMailMessage_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/mail/MailAttachment.idl>
#include <com/sun/star/datatransfer/XTransferable.idl>

module com { module sun { module star { module mail {

/**
   Represents a mail message.

   @see com::sun::star::mail::XMailService

   @since OOo 2.0
 */
interface XMailMessage: ::com::sun::star::uno::XInterface {

     /**
        The display name of the sender of this mail message.
    */
    [attribute, readonly] string SenderName;
    /**
        The e-mail address of the sender of this mail message.
        The e-mail address has to conform to <a href="http://www.ietf.org/rfc/rfc822.txt">RFC&nbsp;822</a>.
    */
    [attribute, readonly] string SenderAddress;

    /**
        The e-mail address where replies on this mail message should be sent to.
        If the e-mail address doesn't conform to <a href="http://www.ietf.org/rfc/rfc822.txt">RFC&nbsp;822</a>
        sending the mail message later will fail.
        If no ReplyToAddress is set replies go to the SenderAddress.
    */
    [attribute] string ReplyToAddress;

    /**
        Add an recipients e-mail address to the list of recipients of this mail message.
        If the e-mail address doesn't conform to <a href="http://www.ietf.org/rfc/rfc822.txt">RFC&nbsp;822</a>
        sending the mail message will fail.

        @param sRecipientAddress
        [in] the e-mail address of the recipient.
    */
    void addRecipient([in] string sRecipientAddress);

    /**
        Add an Cc recipients e-mail address to the list of recipients of this mail message.
        If the e-mail address doesn't conform to <a href="http://www.ietf.org/rfc/rfc822.txt">RFC&nbsp;822</a>
        sending the mail message will fail.

        @param sRecipientAddress
        [in] the e-mail address of the Cc recipient.
    */
    void addCcRecipient([in] string sRecipientAddress);

    /**
        Add an BCC recipients e-mail address to the list of recipients of this mail message.
        If the e-mail address doesn't conform to <a href="http://www.ietf.org/rfc/rfc822.txt">RFC&nbsp;822</a>
        sending the mail message will fail.

        @param sRecipientAddress
        [in] the e-mail address of the BCC recipient.
    */
    void addBccRecipient([in] string sRecipientAddress);

    /**
        Return a sequence of the e-mail addresses of all recipients of
        this mail message.
    */
    sequence<string> getRecipients();

    /**
        Return a sequence of the e-mail addresses of all the Cc recipients
        of this mail message.
    */
    sequence<string> getCcRecipients();

    /**
        Return a sequence of the e-mail addresses of all the BCC recipients
        of this mail message.
    */
    sequence<string> getBccRecipients();

    /**
        The subject of a mail message.
    */
    [attribute] string Subject;

    /**
        The body of the mail message.
        It is expected that the transferable delivers the data as
        a string. Although a transferable may support multiple
        data flavors only the first data flavor supplied will be
        used to retrieve the data and it is expected that the data
        will be provided as a string.

        @see com::sun::star::datatransfer::XTransferable
    */
    [attribute] com::sun::star::datatransfer::XTransferable Body;

    /**
        Add a file attachment to a mail message.

        param aMailAttachment
        [in] specifies a file which should be attached to this mail message.

        @see com::sun::star::mail::MailAttachment
    */
    void addAttachment([in] MailAttachment aMailAttachment);

    /**
        Return a sequence of <type>MailAttachment</type>'s that will
        be attached to this mail message.

        @see com::sun::star::mail::MailAttachment
    */
    sequence<MailAttachment> getAttachments();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
