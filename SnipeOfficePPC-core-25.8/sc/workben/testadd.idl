/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef SC_WORKBEN_TESTADD_IDL
#define SC_WORKBEN_TESTADD_IDL

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/beans/XPropertySet.idl>
#include <com/sun/star/table/XCellRange.idl>
#include <com/sun/star/sheet/XVolatileResult.idl>


module stardiv
{
module starcalc
{
module test
{

/** test-interface for an AddIn implementation
 */
[ uik(2DB48150-7FBB-11d3-9F510050-042A51C9), ident("XTestAddIn", 1.0) ]
interface XTestAddIn:com::sun::star::uno::XInterface
{
    long countParams([in]sequence<any> aArgs);
    double addOne([in]double fValue);
    string repeatStr([in]string aStr, [in]long nCount);
    string getDateString([in]com::sun::star::beans::XPropertySet xCaller, [in]double fValue);
    long getColorValue([in]com::sun::star::table::XCellRange xRange);
    sequence< sequence<double> > transpose([in]sequence< sequence<double> > aMatrix);
    sequence< sequence<long> > transposeInt([in]sequence< sequence<long> > aMatrix);
    com::sun::star::sheet::XVolatileResult callAsync([in]string aString);
    string repeatMultiple([in]long nCount, [in]any aFirst, [in]sequence<any> aFollow);
    any getStrOrVal([in]long nFlag);
};

};
};
};



#endif

