/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/uno/Exception.idl>

module test
{

struct TestTypes
{
    boolean                    Bool;
    char                       Char;
    byte                       Byte;
    short                      Short;
    unsigned short             UShort;
    long                       Long;
    unsigned long              ULong;
    hyper                      Hyper;
    unsigned hyper             UHyper;
    float                      Float;
    double                     Double;
//  test::TestEnum             Enum;
    string                     String;
    com::sun::star::uno::XInterface   Interface;
    any                        Any;
};

exception TestBridgeException : com::sun::star::uno::Exception
{

};

interface XCallMe : com::sun::star::uno::XInterface
{
    void call( [in] string s , [in] long nToDo ) raises( TestBridgeException );
    [oneway] void callOneway( [in] string s , [in] long nToDo );
    [attribute] string sAttribute;
    void callAgain( [in] XCallMe callAgain, [in] long nToCall );
    TestTypes transport( [in] TestTypes types );
    [oneway] void drawLine( [in] long x1 , [in] long y1, [in] long x2, [in] long y2 );
};

interface XInterfaceTest : com::sun::star::uno::XInterface
{
    void setIn( [in] XCallMe callback );
    void setInOut( [inout] XCallMe callback );
    void getOut( [out] XCallMe callback );
    XCallMe get();
};

interface XTestFactory : com::sun::star::uno::XInterface
{
    XCallMe createCallMe();
    XInterfaceTest createInterfaceTest();
};


};
