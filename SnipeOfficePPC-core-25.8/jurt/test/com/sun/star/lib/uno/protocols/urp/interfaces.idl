/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_uno_XInterface_idl__
#include <com/sun/star/uno/XInterface.idl>
#endif

#ifndef __com_sun_star_beans_XPropertySet_idl_
#include <com/sun/star/beans/XPropertySet.idl>
#endif

#ifndef __com_sun_star_uno_Exception_idl__
#include <com/sun/star/uno/Exception.idl>
#endif

#ifndef __com_sun_star_uno_Exception_idl__
#include <com/sun/star/uno/Any.idl>
#endif


module com { module sun { module star { module lib { module uno {
module protocols { module urp {

    struct TestPrimitiveStruct {
        boolean        zBool;
        short          zShort;
        unsigned short zUShort;
        long           zLong;
        unsigned long  zULong;
        hyper          zHyper;
        unsigned hyper zUHyper;
        float          zFloat;
        double         zDouble;
        char           zChar;
        byte           zByte;
        string         zString;
        any            zAny;
    };

    struct TestPrimitiveSeqStruct {
        sequence<boolean>        zBool;
        sequence<short>          zShort;
        sequence<unsigned short> zUShort;
        sequence<long>           zLong;
        sequence<unsigned long>  zULong;
        sequence<hyper>          zHyper;
        sequence<unsigned hyper> zUHyper;
        sequence<float>          zFloat;
        sequence<double>         zDouble;
        sequence<char>           zChar;
        sequence<byte>           zByte;
        sequence<string>         zString;
        sequence<any>            zAny;
    };

    struct TestNestedStruct {
        TestPrimitiveStruct    primitiveStruct;
        TestPrimitiveSeqStruct primitiveSeqStruct;
    };

    struct TestNestedSeqStruct {
        sequence< sequence< long > > val;
    };

    interface TestXInterface : com::sun::star::uno::XInterface {
        void method1([in] com::sun::star::uno::XInterface itf) raises( com::sun::star::uno::Exception );
        void method2([out] com::sun::star::uno::XInterface itf) raises( com::sun::star::uno::Exception );
        void method3([inout] com::sun::star::uno::XInterface itf) raises( com::sun::star::uno::Exception );
        com::sun::star::uno::XInterface method4() raises( com::sun::star::uno::Exception );

        any returnAny() raises( com::sun::star::uno::Exception );

        void  method() raises( com::sun::star::uno::Exception );
        void  methodWithInParameter([in] string text) raises( com::sun::star::uno::Exception );
        void  methodWithOutParameter([out] string text) raises( com::sun::star::uno::Exception );
        void  methodWithInOutParameter([inout] string text) raises( com::sun::star::uno::Exception );
        string  methodWithResult() raises( com::sun::star::uno::Exception );

        string MethodWithIn_Out_InOut_Paramters_and_result([in] string text, [out] string outtext, [inout] string inouttext) raises( com::sun::star::uno::Exception );
    };

    struct TestInterfaceStruct
    {
        com::sun::star::uno::XInterface hallo;

        com::sun::star::beans::XPropertySet hallo2;
    };

    enum TestEnum {
        A = 7,
        B = 8,
        C = 11
    };

}; }; }; }; }; }; };
