<?xml version='1.0' encoding='UTF-8'?>
<!--***********************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * 
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************ -->
<!DOCTYPE oor:component-schema SYSTEM "../../../../component-schema.dtd">
<oor:component-schema oor:name="Types" oor:package="org.openoffice.TypeDetection" xml:lang="en-US" xmlns:oor="http://openoffice.org/2001/registry" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <info>
        <author>AS</author>
        <desc >Contains common content types for Office. See package TypeDetection and TypeDetection_Filters for other parts of type/filter configuration too.</desc>
    </info>
    <templates>
		<group oor:name="Type">
            <info><desc>Lists the types that represent common content formats in Office.</desc></info>
			<prop oor:name="UIOrder" oor:type="xs:int" oor:nillable="false">
                <info><desc>Used to sort types inside dialogs. Only values &gt;0 are recognized. Types with an order value &lt;1 will be sorted alphabeticly.</desc></info>
				<value>0</value>
			</prop>
            <prop oor:name="URLPattern" oor:type="oor:string-list" oor:nillable="false">
                <info><desc>List of URL pattern (with simple wildcards */?) which match to this type.</desc></info>
				<value/>
            </prop>
            <prop oor:name="Extensions" oor:type="oor:string-list" oor:nillable="false">
                <info><desc>List of file extensions, which match to this type.</desc></info>
				<value/>
            </prop>
			<prop oor:name="DocumentIconID" oor:type="xs:int" oor:nillable="false">
                <info><desc>Global ID of an icon, which represent this tye at the UI.</desc></info>
				<value>0</value>
			</prop>
            <prop oor:name="MediaType" oor:type="xs:string" oor:nillable="false">
                <info><desc>Corresponding mime type.</desc></info>
				<value/>
            </prop>
			<prop oor:name="Preferred" oor:type="xs:boolean" oor:nillable="false">
                <info><desc>In case of ambigoues registrations (e.g. for extensions doc/txt) it specify the prefererred type.</desc></info>
				<value>false</value>
			</prop>
            <prop oor:name="PreferredFilter" oor:type="xs:string" oor:nillable="false">
                <info><desc>An optimization! Points directly to the preferred filter for this type. No search across all filters is neccessary ...</desc></info>
				<value/>
            </prop>
            <prop oor:name="UIName" oor:localized="true" oor:type="xs:string">
                <info><desc>Localized name of this type for showing it at the UI.</desc></info>
            </prop>
            <prop oor:name="ClipboardFormat" oor:type="xs:string" oor:nillable="false">
                <info><desc>Unique identifier, which can be searched inside the stream to detect this format.</desc></info>
				<value/>
            </prop>
            <prop oor:name="DetectService" oor:type="xs:string" oor:nillable="false">
                <info><desc>An optimization! Points directly to the deep detection service, which can verify a flat detection.</desc></info>
				<value/>
            </prop>
		</group>
	</templates>
	<component>
        <set oor:name="Types" oor:node-type="Type">
            <info><desc>Lists the registered content types.</desc></info>
        </set>
	</component>
</oor:component-schema>
