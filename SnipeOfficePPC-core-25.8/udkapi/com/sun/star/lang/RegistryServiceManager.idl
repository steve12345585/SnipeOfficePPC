/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_RegistryServiceManager_idl__
#define __com_sun_star_lang_RegistryServiceManager_idl__

#include <com/sun/star/lang/ServiceManager.idl>

#include <com/sun/star/lang/MultiServiceFactory.idl>

#include <com/sun/star/lang/XInitialization.idl>

#include <com/sun/star/beans/XPropertySet.idl>

#include <com/sun/star/registry/XSimpleRegistry.idl>


//=============================================================================

module com {  module sun {  module star {  module lang {

//=============================================================================

/** Provides a collection of implementations for services reading from a
    persistent registry storage.

    For usage of the service manager have a look at service description
    of <type>ServiceManager</type>.

    @see ServiceManager
*/
published service RegistryServiceManager
{
    /** This is a derived ServiceManager service.
    */
    service com::sun::star::lang::ServiceManager;

    /** The first two arguments of the intitialization arguments reference:
        <ol>
        <li>a simple registry
        (<type scope="com::sun::star::registry">XSimpleRegistry</type>),
        i.e. the registry to be read from</li>
        <li>a component context
        (<type scope="com::sun::star::uno">XComponentContext</type>)
        to be installed as "DefaultContext" property of the
        <type>ServiceManager</type> which is the context to be used
        using the <type>XMultiServiceFactory</type> interface.</li>
        </ol>
    */
    interface com::sun::star::lang::XInitialization;

    /** Property access.
    */
    interface com::sun::star::beans::XPropertySet;
    /** Specifies the current registry to be read from.
    */
    [readonly, property] com::sun::star::registry::XSimpleRegistry Registry;
};

//=============================================================================

}; }; }; };

/*=============================================================================

=============================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
