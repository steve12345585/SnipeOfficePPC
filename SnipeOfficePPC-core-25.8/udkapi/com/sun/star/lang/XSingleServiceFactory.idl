/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_XSingleServiceFactory_idl__
#define __com_sun_star_lang_XSingleServiceFactory_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/uno/Exception.idl>


//=============================================================================

module com {  module sun {  module star {  module lang {

//=============================================================================

/** Factory interface to produce instances of an implementation
    of a service specification.

    This interface is deprecated.  Please use <type>XSingleComponentFactory</type>.

    @see XInitialization
    @deprecated
*/
published interface XSingleServiceFactory: com::sun::star::uno::XInterface
{
    /** Creates an instance of a service implementation.

        @return
                service instance
    */
    com::sun::star::uno::XInterface createInstance()
        raises( com::sun::star::uno::Exception );

    /** Creates an instance of a service implementation initialized with
        some arguments.

        @param aArguments
               arguments passed to implementation
        @return
                service instance
    */
    com::sun::star::uno::XInterface createInstanceWithArguments( [in] sequence<any> aArguments )
        raises( com::sun::star::uno::Exception );
};

//=============================================================================

}; }; }; };

/*=============================================================================

=============================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
