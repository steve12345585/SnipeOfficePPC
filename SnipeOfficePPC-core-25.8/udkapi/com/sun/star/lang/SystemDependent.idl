/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_SystemDependent_idl__
#define __com_sun_star_lang_SystemDependent_idl__


//=============================================================================

module com {  module sun {  module star {  module lang {

//=============================================================================

// DocMerge from idl: constants com::sun::star::lang::SystemDependent
/** These constants are used to specify systems which depend on return values.

    <p> You should avoid system-dependent methods if possible.

    @example:C++

    <listing>
    #ifdef __WINDOW // Microsoft Windows
    HWND    hWin = (HWND)xInterface->getWindowHandle(SystemDependentWIN32);
    if( hWin ) ...
    #elif( ... ) // other systems
    ...
    #endif
    </listing>

    <p>The Symbols are now prepended with SYSTEM_ thus we avoid collisions
    with system headers.  </p>

    @see com::sun::star::awt::XSystemDependentWindowPeer
    @deprecated
 */
published constants SystemDependent
{
    //-------------------------------------------------------------------------

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_WIN32
    /** The called interface method returns a value specified for Windows.

        <p>These are Windows XP or higher. </p>
     */
    const short SYSTEM_WIN32 = 1;

    //-------------------------------------------------------------------------

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_WIN16
    /** The called interface method returns a value specified for 16-bit Windows.

        <p>This is Windows 3.11. </p>
     */
    const short SYSTEM_WIN16 = 2;

    //-------------------------------------------------------------------------

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_JAVA
    /** The called interface method returns a value specified for Java.

        <p>These are <em>JRE 1.1</em>, <em>JRE 1.2</em>, <em>JDK 1.1</em>,
        <em>JDK 1.2</em> or higher.   </p>

        <p>The return should be a handle to a Java object locked with
        the call <code>JavaEnvironment->NewGlobalRef( ... )</code>
        by the callee. </p>
     */
    const short SYSTEM_JAVA = 3;

    //-------------------------------------------------------------------------

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_OS2
    /** The called interface method returns a value specified for <em>OS/2</em>.
     */
    const short SYSTEM_OS2 = 4;

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_MAC
    /** The called interface method returns a value specified for <em>Mac OS X</em>.
     */
    const short SYSTEM_MAC = 5;

    //-------------------------------------------------------------------------

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_XWINDOW
    /** The called interface method returns a value specified for the <em>X Window System</em>.
     */
    const short SYSTEM_XWINDOW = 6;

    //-------------------------------------------------------------------------

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_IOS
    /** The called interface method returns a value specified for <em>iOS</em>.
     */
    const short SYSTEM_IOS = 7;

    //-------------------------------------------------------------------------

    // DocMerge from idl: value com::sun::star::lang::SystemDependent::SYSTEM_ANDROID
    /** The called interface method returns a value specified for <em>Android</em>.
     */
    const short SYSTEM_ANDROID = 8;

};

//=============================================================================

}; }; }; };

/*=============================================================================

=============================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
