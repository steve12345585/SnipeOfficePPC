/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_lang_MultiServiceFactory_idl__
#define __com_sun_star_lang_MultiServiceFactory_idl__

#include <com/sun/star/lang/XMultiServiceFactory.idl>
#include <com/sun/star/lang/XMultiComponentFactory.idl>

#include <com/sun/star/lang/XServiceInfo.idl>


//=============================================================================

module com {  module sun {  module star {  module lang {

//=============================================================================

/** Provides a collection of implementations of services.

    <p>The factories for instantiating objects of implemetations
    are accessed via a service name.</p>

    <p>The <type scope="com::sun::star::container">XContentEnumerationAccess</type>
    interface can be supported optionally.
    If it is suported, it is possible to  enumerate all implementations that
    support the service specified with the argument of
    <member scope="com::sun::star::container">XContentEnumerationAccess::createContentEnumeration</member>.
    The enumerator returns interfaces. The type of the interface is not specified.
    Commonly this is <type>XSingleComponentFactory</type>.</p>
*/
published service MultiServiceFactory
{
    /** This interface uses a service name to instantiate a component
        which supports the specified service.
    */
    interface com::sun::star::lang::XMultiServiceFactory;

    /** This interface uses a service name and a component context to instantiate
        a component which supports the specified service.
    */
    interface com::sun::star::lang::XMultiComponentFactory;

    /** Factories, as well as all other services, should always support
        this interface.
    */
    interface com::sun::star::lang::XServiceInfo;
};

//=============================================================================

}; }; }; };

/*=============================================================================

=============================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
