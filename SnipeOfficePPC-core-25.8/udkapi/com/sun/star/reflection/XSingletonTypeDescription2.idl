/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_reflection_XSingletonTypeDescription2_idl__
#define __com_sun_star_reflection_XSingletonTypeDescription2_idl__

#include "com/sun/star/reflection/XSingletonTypeDescription.idl"

module com {  module sun {  module star {  module reflection {

interface XTypeDescription;

/**
   Reflects a singleton, supporting interface-based singletons.

   <p>This type supersedes <type>XSingletonTypeDescription</type>, which only
   supports obsolete, service-based singletons.</p>

   @since OOo 2.0
 */
interface XSingletonTypeDescription2: XSingletonTypeDescription {
    /**
       Returns whether this object reflects an interface-based singleton.

       @return <TRUE/> if this object reflects an interface-based singleton, and
           <FALSE/> if this object reflects an obsolete, service-based singleton
     */
    boolean isInterfaceBased();

    /**
       Returns the interface type associated with the singleton.

       @return the reflection of the interface type associated with the
           singleton (of type <type
           scope="com::sun::star::reflection">XInterfaceTypeDescription</type>
           or, in case of a typedef, <type
           scope="com::sun::star::reflection">XIndirectTypeDescription</type>),
           for an interface-based singleton; for an obsolete, service-based
           singleton, <NULL/> is returned
     */
    XTypeDescription getInterface();
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
