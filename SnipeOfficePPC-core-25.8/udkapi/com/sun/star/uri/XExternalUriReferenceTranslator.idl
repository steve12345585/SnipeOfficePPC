/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_uri_XExternalUriReferenceTranslator_idl__
#define __com_sun_star_uri_XExternalUriReferenceTranslator_idl__

#include <com/sun/star/uno/XInterface.idl>

module com { module sun { module star { module uri {

/**
   translates between external and internal URI references.

   <p>Some URI schemes leave unspecified important aspects of how to interpret
   URIs of those schemes.  For example, it is unspecified for &ldquo;file&rdquo;
   URLs how to map the byte sequences that constitute the path segments of a
   &ldquo;file&rdquo; URL to filenames on a given platform:  The UNO environment
   always assumes that path segments of &ldquo;file&rdquo; URLs represent
   UTF-8&ndash;encoded strings (which have to be mapped to filenames in a
   platform-specific way), while other applications typically assume that path
   segments of &ldquo;file&rdquo; URLs directly represent a platform's
   byte-sequence filenames.  This interface offers methods to translate between
   such <dfn>internal</dfn> URIs (e.g., UTF-8&ndash;encoded &ldquo;file&rdquo;
   URLs used within the UNO environment) and <dfn>external</dfn> URIs (e.g.,
   byte-sequence&ndash;oriented &ldquo;file&rdquo; URLs used by other
   applications).  Typically, only &ldquo;file&rdquo; URLs are affected by this
   translation.</p>

   <p>Since the translation process is based on URI schemes, relative URI
   references (that do not include a scheme) are left unmodified by the
   translation process.</p>

   @since OOo 2.0
 */
published interface XExternalUriReferenceTranslator {
    /**
       returns the internal counterpart of an external URI reference.

       @param externalUriReference
       an external URI reference.

       @returns
       the internal counterpart of the given external URI reference.  An empty
       string is returned if the given external URI reference either is an empty
       string or cannot be converted (for example, because it contains illegal
       characters).
     */
    string translateToInternal([in] string externalUriReference);

    /**
       returns the external counterpart of an internal URI reference.

       @param internalUriReference
       an internal URI reference.

       @returns
       the external counterpart of the given internal URI reference.  An empty
       string is returned if the given internal URI reference either is an empty
       string or cannot be converted (for example, because it contains illegal
       characters).
     */
    string translateToExternal([in] string internalUriReference);
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
