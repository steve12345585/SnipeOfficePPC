/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef _COM_SUN_STAR_BRIDGE_XBRIDGE_IDL_
#define _COM_SUN_STAR_BRIDGE_XBRIDGE_IDL_

#include <com/sun/star/uno/XInterface.idl>

module com {  module sun {  module star {  module bridge {

/** main interface for an interprocess bridge.
 */
published interface XBridge: com::sun::star::uno::XInterface
{
    /** tries to get an interface from the remote that is known by this name.

        <p>In general, this method is called once to get the initial object from the
        remote, but it is allowed to call the method multiple times. </p>

        @param sInstanceName The name of the object, that shall be retrieved from the
                             remote process. The call is delegated to
                             com.sun.star.bridge.XInstanceProvider.getInstance() in the
                             remote process.
        @see com.sun.star.bridge.XInstanceProvider
     */
    com::sun::star::uno::XInterface getInstance( [in] string sInstanceName );


    /** name that the bridge got when it was created.
     */
    string getName();


    /** a unique descriptive string: protocol + ":" + XConnection.getDescription()
     */
    string getDescription();
};

};};};};

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
