/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_bridge_oleautomation_NamedArgument_idl__
#define __com_sun_star_bridge_oleautomation_NamedArgument_idl__


module com {  module sun {  module star {  module bridge {  module oleautomation {

/** represents a named argument in a call to a method of an Automation object.
    <p>
    The Automation bridge accepts values of <type>NamedArgument</type> when a
    call to an Automation object is made. The call is done through the
    <method scope="com::sun::star::script">XInvocation::invoke</method>
    method, which takes all arguments in a sequence of anys. Usually the order
    of the arguments must correspond to the order of arguments in the Automation
    method. By using instances of <type>NamedArgument</type> the arguments in the
    sequence can be unordered. The Automation object being called must support
    named arguments, otherwise the call fails.
    </p>

    @since OOo 1.1.2
 */
struct NamedArgument
{
    /** The name of the argument, for which
        <member>NamedArgument::Value</member> is intended.
     */
    string Name;

    /** The value of the argument whoose name is the one as contained in the
        member <member>Name</member>.
     */
    any Value;
};

}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
