/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_bridge_oleautomation_Currency_idl__
#define __com_sun_star_bridge_oleautomation_Currency_idl__


module com {  module sun {  module star {  module bridge {  module oleautomation {

/** is the UNO representation of the Automation type <code>CY</code>, also know
    as <code>CURRENCY</code>.
    <p>
    A <code>CY</code> could actually be represented as <atom>hyper</atom> in UNO
    and therefore a typedef from <atom>hyper</atom> to a currency type would do.
    But a typedef cannot be expressed in all language bindings. In the case
    where no typedefs are supported the actual type is used. That is, a
    typedef'd currency type would be represented as <code>long</code> in Java.
    The information that the <code>long</code> is a currency type is lost.
    </p>
    <p>
    When calling Automation objects from UNO the distinction between
    <atom>hyper</atom> and a currency type is important. Therefore
    <type>Currency</type> is declared as struct.
    </p>

    @since OOo 1.1.2
 */
struct Currency
{
    /** corresponds to the Automation type <code>CY</code>.
     */
    hyper Value;
};

}; }; }; }; };


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
