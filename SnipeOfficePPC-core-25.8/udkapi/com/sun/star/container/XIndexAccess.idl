/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_container_XIndexAccess_idl__
#define __com_sun_star_container_XIndexAccess_idl__

#include <com/sun/star/container/XElementAccess.idl>

#include <com/sun/star/lang/IndexOutOfBoundsException.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>


//=============================================================================

module com {  module sun {  module star {  module container {

//=============================================================================

/** provides access to the elements of a collection through an
    index.

    <p>This interface should only be used if the data structure, itself,
    is indexed.</p>
 */
published interface XIndexAccess: com::sun::star::container::XElementAccess
{
    //-------------------------------------------------------------------------

    /** @returns
                the number of elements in this container.
     */
    long getCount();

    //-------------------------------------------------------------------------

    // DocMerge from idl: method com::sun::star::container::XIndexAccess::getByIndex
    /** @returns
            the element at the specified index.

        @param Index
            specifies the position in the array. The first index is 0.

        @throws com::sun::star::lang::IndexOutOfBoundException
            if the index is not valid.

        @throws  com::sun::star::lang::WrappedTargetException
            If the implementation has internal reasons for exceptions,
            then wrap these in a <type scope="com::sun::star::lang">WrappedTargetException</type>
            exception.
     */
    any getByIndex( [in] long Index )
            raises( com::sun::star::lang::IndexOutOfBoundsException,
                    com::sun::star::lang::WrappedTargetException );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
