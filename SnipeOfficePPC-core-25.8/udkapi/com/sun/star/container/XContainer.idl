/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_container_XContainer_idl__
#define __com_sun_star_container_XContainer_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/container/XContainerListener.idl>


//=============================================================================

module com {  module sun {  module star {  module container {

//=============================================================================

/** supports quick access to the information if a container currently
    contains elements.

    <p>The <type>XContainer</type> interface is provided for containers
    which need to broadcast changes within the container; that means
    the actions of adding or removing elements are broadcast to the
    listeners.  </p>

    <p>This can be useful for UI to enable/disable some functions
    without actually accessing the data.  </p>

    @see XContent
    @see XIndexAccess
    @see XNameAcces
    @see XEnumerationAccess
 */
published interface XContainer: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** adds the specified listener to receive events when
        elements are inserted or removed.

       <p>It is suggested to allow multiple registration of the same listener,
        thus for each time a listener is added, it has to be removed.

        @see XContainerListener
     */
    [oneway] void addContainerListener( [in] com::sun::star::container::XContainerListener xListener );

    //-------------------------------------------------------------------------

    /** removes the specified listener so it does not receive
        any events from this container.

       <p>It is suggested to allow multiple registration of the same listener,
        thus for each time a listener is added, it has to be removed.

        @see XContainerListener
     */
    [oneway] void removeContainerListener( [in] com::sun::star::container::XContainerListener xListener );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
