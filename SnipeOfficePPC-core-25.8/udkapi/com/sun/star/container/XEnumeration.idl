/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_container_XEnumeration_idl__
#define __com_sun_star_container_XEnumeration_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/container/NoSuchElementException.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>


//=============================================================================

module com {  module sun {  module star {  module container {

//=============================================================================

/** provides functionality to enumerate the contents of a container.

    <p>An object that implements the <type>XEnumeration</type> interface
    generates a series of elements, one at a time. Successive calls to
    the <code>XEnumeration::nextElement</code> method return successive
    elements of the series.  </p>

    <p>For example (Java), to print all elements of a vector <var>aVect</var>:
    </p>

    <listing>
    for ( XEnumeration xEnum = aVect.elements() ;
    xEnum.hasMoreElements() ; )
    {
    System.out.println( xEnum.nextElement() );
    }
    </listing>


    <p> If the object changed, the behavior of the enumeration is
    not specified. This is not a remote interface.  </p>
 */
published interface XEnumeration: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** tests whether this enumeration contains more elements.
     */
    boolean hasMoreElements();

    //-------------------------------------------------------------------------

    /** @returns
            the next element of this enumeration.

        @throws  NoSuchElementException
            if no more elements exist.

        @throws  com::sun::star::lang::WrappedTargetException
            If the implementation has internal reasons for exceptions,
            then wrap these in a <type scope="com::sun::star::lang">WrappedTargetException</type>
            exception.
     */
    any nextElement()
            raises( com::sun::star::container::NoSuchElementException,
                    com::sun::star::lang::WrappedTargetException );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
