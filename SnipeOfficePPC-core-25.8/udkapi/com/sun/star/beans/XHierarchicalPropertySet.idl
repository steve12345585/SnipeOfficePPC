/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_beans_XHierarchicalPropertySet_idl__
#define __com_sun_star_beans_XHierarchicalPropertySet_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/XHierarchicalPropertySetInfo.idl>

#include <com/sun/star/beans/UnknownPropertyException.idl>

#include <com/sun/star/beans/PropertyVetoException.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>

#include <com/sun/star/lang/WrappedTargetException.idl>


//=============================================================================

module com {  module sun {  module star {  module beans {

//=============================================================================

/** provides information about and access to the
    a hierarchy of properties from an implementation.

    <p> Usually an object that implements this interface
        also implements <type>XPropertySet</type> and at
        least some of the properties have subproperties.  </p>

    <p> This interface allows direct access to subsubproperties, ...
        up to an arbitrary nesting depth. Often the intermediate
        elements of the hierarchy implement <type>XProperty</type>.  </p>

    <p> Each implementation specifies how the
        hierarchical property names, that are
        used to access the elements of the hierarchy,
        are formed.  </p>

    <p> Commonly a notation similar to filesystem paths
        (separated by '/' slashes) or nested module names
        (separated by dots '.' or '::') is used.  </p>

 */
published interface XHierarchicalPropertySet: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** retrieve information about the hierarchy of properties

        @returns
                the <type>XHierarchicalPropertySetInfo</type> interface,
                which describes the property hierarchy of the object which
                supplies this interface.

        @returns
                <NULL/> if the implementation cannot or will
                not provide information about the properties; otherwise the
                interface <type>XHierarchicalPropertySetInfo</type> is returned.
     */
    com::sun::star::beans::XHierarchicalPropertySetInfo
                getHierarchicalPropertySetInfo();

    //-------------------------------------------------------------------------

    /** sets the value of the property with the specified nested name.

        @param  aHierarchicalPropertyName
                This parameter specifies the name of the property.

        @param  aValue
                This parameter specifies the new value for the property.

        @throws UnknownPropertyException
                if the property does not exist.

        @throws PropertyVetoException
                if the property is constrained and the change is vetoed by a
                <type>XVetoableChangeListener</type>.

        @throws com::sun::star::uno::lang::IllegalArgumentException
                if <var>aValue</var> is not a legal value for this property or
                if <var>aHierarchicalPropertyName</var> is not a well-formed
                nested name for this hierarchy.
                An implementation is not required to detect the latter condition.

        @throws com::sun::star::lang::WrappedTargetException
                if the implementation has an internal reason for the exception.
                In this case the original exception is wrapped into that
                <type scope="com::sun::star::lang">WrappedTargetException</type>.

        @see XPropertySet::setPropertyValue
     */
    void setHierarchicalPropertyValue( [in] string aHierarchicalPropertyName,
             [in] any aValue )
            raises( com::sun::star::beans::UnknownPropertyException,
                    com::sun::star::beans::PropertyVetoException,
                    com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::lang::WrappedTargetException );

    //-------------------------------------------------------------------------

    /** @returns
                the value of the property with the specified nested name.

        @param  aHierarchicalPropertyName
                This parameter specifies the name of the property.

        @throws UnknownPropertyException
                if the property does not exist.

        @throws com::sun::star::uno::lang::IllegalArgumentException
                if <var>aHierarchicalPropertyName</var> is not a well-formed
                nested name for this hierarchy.
                   An implementation is not required to detect this
                condition.

        @throws com::sun::star::lang::WrappedTargetException
                if the implementation has an internal reason for the exception.
                In this case the original exception is wrapped into that
                <type scope="com::sun::star::lang">WrappedTargetException</type>.

        @see XPropertySet::getPropertyValue
     */
    any getHierarchicalPropertyValue( [in] string aHierarchicalPropertyName )
            raises( com::sun::star::beans::UnknownPropertyException,
                    com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::lang::WrappedTargetException );

    //-------------------------------------------------------------------------

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
