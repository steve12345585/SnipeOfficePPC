/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_beans_XHierarchicalPropertySetInfo_idl__
#define __com_sun_star_beans_XHierarchicalPropertySetInfo_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/beans/Property.idl>

#include <com/sun/star/beans/UnknownPropertyException.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>


//=============================================================================

module com {  module sun {  module star {  module beans {

//=============================================================================

/** specifies a hierarchy of properties.

    <p>The specification only describes the properties, it does not contain
    any values.</p>
 */
published interface XHierarchicalPropertySetInfo: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------

    /** @returns
                the property with the specified name from the hierarchy.

        @param aHierarchicalName
                specifies the nested name of the property.

        @throws UnknownPropertyException
                if the property does not exist.

        @throws com::sun::star::lang::IllegalArgumentException
                if <var>aHierarchicalName</var> is not a well-formed
                nested name for this hierarchy.
                   An implementation is not required to detect this
                condition.

     */
    com::sun::star::beans::Property getPropertyByHierarchicalName( [in] string aHierarchicalName )
            raises( com::sun::star::beans::UnknownPropertyException );

    //-------------------------------------------------------------------------

    /** @returns
                <TRUE/> if a property with the specified name exists;
                otherwise <FALSE/> is returned.

        @param  aHierarchicalName
                specifies the name of the property.

        @throws com::sun::star::lang::IllegalArgumentException
                if <var>aHierarchicalName</var> is not a well-formed
                nested name for this hierarchy.
                   An implementation is not required to detect this
                condition.
     */
    boolean hasPropertyByHierarchicalName( [in] string aHierarchicalName );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
