/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_uno_TypeClass_idl__
#define __com_sun_star_uno_TypeClass_idl__


//=============================================================================

 module com {  module sun {  module star {  module uno {

//=============================================================================

/** This enum describes all type classes of UNO.  Every specific type has a type
    class specifying the general context of the reflected type.

    <p>
    Example:
    A type reflecting the interface <type>XInterface</type> is of type class
    INTERFACE and its name is "com.sun.star.uno.XInterface".
    </p>
*/
published enum TypeClass
{
    /** reflecting the void type; denotes no type
    */
    VOID,
    /** reflecting the 16-bit unicode character type
    */
    CHAR,
    /** reflecting the boolean type; true and false
    */
    BOOLEAN,
    /** reflecting the 8-bit ordinal type
    */
    BYTE,
    /** reflecting the signed 16-bit ordinal type
    */
    SHORT,
    /** reflecting the unsigned 16-bit ordinal type
    */
    UNSIGNED_SHORT,
    /** reflecting the signed 32-bit ordinal type
    */
    LONG,
    /** reflecting the unsigned 32-bit type
    */
    UNSIGNED_LONG,
    /** reflecting the signed 64-bit ordinal type
    */
    HYPER,
    /** reflecting the unsigned 64-bit ordinal type
    */
    UNSIGNED_HYPER,
    /** reflecting the 32-bit floating point type
    */
    FLOAT,
    /** reflecting the 64-bit floating point type
    */
    DOUBLE,
    /** reflecting the string type; strings of unicode characters
    */
    STRING,
    /** reflecting the meta type
    */
    TYPE,
    /** reflecting the any type; anys can carry any UNO value except of any values
    */
    ANY,
    /** reflecting enum types
    */
    ENUM,
    /** reflecting typedefed types referencing other types
    */
    TYPEDEF,
    /** reflecting compound types
    */
    STRUCT,
    /** reflecting union types
    */
    UNION,
    /** reflecting exception types
    */
    EXCEPTION,
    /** reflecting sequence types
    */
    SEQUENCE,
    /** reflecting array types
    */
    ARRAY,
    /** reflecting interface types
    */
    INTERFACE,
    /** reflecting services
    */
    SERVICE,
    /** reflecting modules
    */
    MODULE,
    /** reflecting interface methods
    */
    INTERFACE_METHOD,
    /** reflecting interface attributes
    */
    INTERFACE_ATTRIBUTE,
    /** reflecting the unreflectable type
    */
    UNKNOWN,
    /** reflecting properties
    */
    PROPERTY,
    /** reflecting constants
    */
    CONSTANT,
    /** reflecting constants groups
    */
    CONSTANTS,
    /** reflecting singletons
    */
    SINGLETON
};

//=============================================================================

}; }; }; };

/*=============================================================================

=============================================================================*/
#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
