/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_corba_corba_idl__
#define __com_sun_star_corba_corba_idl__

module com { module sun { module star { module corba
{
    /**
      @deprecated
     */
     published typedef unsigned long ObjectSystemID;
    /**
      @deprecated
     */
    published typedef sequence< byte > OpaqueData;

    /**
      @deprecated
     */
    published struct OneThreadID
    {
        ObjectSystemID objSysID;
        OpaqueData threadID;
    };

    /**
      @deprecated
     */
    published typedef sequence<OneThreadID> ThreadIDs;

    /**
      @deprecated
     */
    published struct LogicalThreadID // Service context
    {
        ThreadIDs IDs;
    };

    /**
      @deprecated
     */
    published struct CorbaString8
    {
        string theString;
    };

    /**
      @deprecated
     */
    published struct CorbaUnion
    {
        long dummy;
    };

    /**
      @deprecated
     */
    published struct ObjectKey
    {
        CorbaString8 sOid;
        CorbaString8 sType;
    };

    /**
      @deprecated
     */
    published enum TCKind
    {
        tk_null, tk_void,
        tk_short, tk_long, tk_ushort, tk_ulong,
        tk_float, tk_double, tk_boolean, tk_char,
        tk_octet, tk_any, tk_TypeCode, tk_Principal, tk_objref,
        tk_struct, tk_union, tk_enum, tk_string,
        tk_sequence, tk_array, tk_alias, tk_except,
        tk_longlong, tk_ulonglong, tk_longdouble,
        tk_wchar, tk_wstring, tk_fixed,
        tk_value, tk_value_box,
        tk_native,
        tk_abstract_interface
    };

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
