/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_modules_idl__
#define __com_sun_star_modules_idl__

module com { module sun { module star {

/// Java beans-like property access and introspection.
module beans{};

/// Interfaces for building bridges to other component models.
module bridge {};

/// Data exchange interfaces for inter-process communication.
module connection {};

/// Interfaces for collections and containers.
module container {};

/// Modules for IOP, IIOP and GIOP.
module corba {};

/// General input/output interfaces.
module io {};

/// Java to UNO connectivity interfaces.
module java {};

/// General UNO concepts like factories etc.
module lang {};

/// Component implementation loader interfaces.
module loader {};

/// Runtime object inspection / core reflection interfaces.
module reflection {};

/// Interfaces to access registration databases.
module registry {};

/// Scripting language bindings.
module script {};

/// Interface for authorisation and authentification.
module security {};

/// Test interfaces for core-reflection, introspection and marshalling.
module test {};

/// Basic UNO interfaces.
module uno {};

/// URI processing.
module uri {};

}; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
