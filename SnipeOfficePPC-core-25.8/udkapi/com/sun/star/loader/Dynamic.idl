/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_loader_SharedLibrary_idl__
#define __com_sun_star_loader_SharedLibrary_idl__

#include <com/sun/star/lang/XServiceInfo.idl>

module com {  module sun {  module star {  module loader {

 published interface XImplementationLoader;


/** makes it possible to access services accessible via a <code>UnoUrlResolver</code>
    E.g., instantiation of services in another process. This service is still in an
    experimental state and should not be used in a production environment.
 */
published service Dynamic
{
    /** is used to write persistent information into the given registry
        for accessing a <code>SingleServiceFactory</code> and for activating this
                implementation.
     */
    /** allows registration and activation of described service.
        The url parameter has to be a comma-separated list of attributes.
        The following attribute types are understood:
        servicename = the service name to register this component under
        link        = a parameter given to a resolver to get a <code>SingleServiceFactory</code>
        resolver    = a <code>UnoUrlResolver</code> service, which is used to resolve the link
    */
    interface XImplementationLoader;


    /** gives information about other supported services
     */
    interface com::sun::star::lang::XServiceInfo;
};

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
