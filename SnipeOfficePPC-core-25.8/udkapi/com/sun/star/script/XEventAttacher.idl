/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/
#ifndef __com_sun_star_script_XEventAttacher_idl__
#define __com_sun_star_script_XEventAttacher_idl__

#include <com/sun/star/uno/XInterface.idl>

#include <com/sun/star/lang/XEventListener.idl>

#include <com/sun/star/script/XAllListener.idl>

#include <com/sun/star/lang/IllegalArgumentException.idl>

#include <com/sun/star/beans/IntrospectionException.idl>

#include <com/sun/star/script/CannotCreateAdapterException.idl>

#include <com/sun/star/lang/ServiceNotRegisteredException.idl>


//=============================================================================

 module com {  module sun {  module star {  module script {

//=============================================================================
/** makes it possible to attach script events given by a sequence of
    <type>ScriptEventDescriptor</type> structures to a given interface.
 */
published interface XEventAttacher: com::sun::star::uno::XInterface
{
    //-------------------------------------------------------------------------
    /** registers the given "AllListener" object as a listener at the
        given interface by creating a suitable listener adapter and
        calling the "addListener" method corresponding to the
        "ListenerType".
     */
    com::sun::star::lang::XEventListener attachListener( [in] com::sun::star::uno::XInterface xTarget,
             [in] com::sun::star::script::XAllListener xAllListener,
             [in] any aHelper,
             [in] string aListenerType,
             [in] string aAddListenerParam )
            raises( com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::beans::IntrospectionException,
                    com::sun::star::script::CannotCreateAdapterException,
                    com::sun::star::lang::ServiceNotRegisteredException );

    //-------------------------------------------------------------------------
    /** registers an object as a listener at the given interface by
        creating a suitable listener adapter and calling the method
        which corresponds to the listener type.

        <p>Only the event corresponding to the given event method
        will be delegated to <var>xAllListener</var>.</p>
     */
    com::sun::star::lang::XEventListener attachSingleEventListener( [in] com::sun::star::uno::XInterface xTarget,
             [in] com::sun::star::script::XAllListener xAllListener,
             [in] any aHelper,
             [in] string aListenerType,
             [in] string aAddListenerParam,
             [in] string aEventMethod )
            raises( com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::beans::IntrospectionException,
                    com::sun::star::script::CannotCreateAdapterException,
                    com::sun::star::lang::ServiceNotRegisteredException );

    //-------------------------------------------------------------------------
    /** removes a listener object as a listener from the given interface.

        <p> This method can and should be used as a contrary method
        to the two attach methods.</p>
     */
    void removeListener( [in] com::sun::star::uno::XInterface xTarget,
             [in] string aListenerType,
             [in] string aRemoveListenerParam,
             [in] com::sun::star::lang::XEventListener xToRemoveListener )
            raises( com::sun::star::lang::IllegalArgumentException,
                    com::sun::star::beans::IntrospectionException );

};

//=============================================================================

}; }; }; };

#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
