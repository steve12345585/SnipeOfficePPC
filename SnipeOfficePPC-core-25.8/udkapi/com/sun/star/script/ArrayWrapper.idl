/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright 2000, 2010 Oracle and/or its affiliates.
 *
 * OpenOffice.org - a multi-platform office productivity suite
 *
 * This file is part of OpenOffice.org.
 *
 * OpenOffice.org is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3
 * only, as published by the Free Software Foundation.
 *
 * OpenOffice.org is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3 for more details
 * (a copy is included in the LICENSE file that accompanied this code).
 *
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with OpenOffice.org.  If not, see
 * <http://www.openoffice.org/license.html>
 * for a copy of the LGPLv3 License.
 *
 ************************************************************************/

#ifndef __com_sun_star_script_XArrayWrapper_idl__
#define __com_sun_star_script_XArrayWrapper_idl__

#include <com/sun/star/uno/XInterface.idl>

//=============================================================================
module com {  module sun {  module star { module script {

//=============================================================================
/** Allows an UNO sequence that is passed between different language
    boundries to indicate it prefers to be represented as a multidimensional
    array with 0 or 1 based indices. UNO does not natively represent
    Multi-Dimensional arrays, instead a sequence can have elements that are
    themselves sequences (an array of arrays ). <p>Some languages ( example
    BASIC ) can natively represent both Multi-Dimentional arrays and array of
    arrays.
    Those languages could represent a sequence of sequences as either a
    Multi-Dimentional array or array of arrays. This structure allows a
    preference for a Multi-Dimensional array representation to be specified.</p>
*/

struct ArrayWrapper
{
    /** Indicates whether the Array should be have 1 or 0 based indexing.
    */
    boolean IsZeroIndex;
    /** Contains the Array to be passed.
        <p> Multi-dimensional arrays can only be represented as a sequence where the elements of the sequence are themselves sequences. N-Levels of indirection are possible, where N is the number of dimensions. Note: its perfectly legal to use this structure with a single dimensioned array just to indicate the array indexing.</p>
    */
    any Array;
};

//=============================================================================

}; }; }; };

#endif


/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
