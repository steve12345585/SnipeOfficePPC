diff -ur boost.org/boost/random/binomial_distribution.hpp boost/boost/random/binomial_distribution.hpp
--- boost.org/boost/random/binomial_distribution.hpp	2012-12-07 21:17:45.789067382 +0100
+++ boost/boost/random/binomial_distribution.hpp	2012-12-07 21:42:39.915034045 +0100
@@ -42,12 +42,12 @@
    *
    * Requires: t >=0 && 0 <= p <= 1
    */
-  explicit binomial_distribution(IntType t = 1,
-                                 const RealType& p = RealType(0.5))
-    : _bernoulli(p), _t(t)
+  explicit binomial_distribution(IntType t_arg = 1,
+                                 const RealType& p_arg = RealType(0.5))
+    : _bernoulli(p_arg), _t(t_arg)
   {
     assert(_t >= 0);
-    assert(RealType(0) <= p && p <= RealType(1));
+    assert(RealType(0) <= p_arg && p_arg <= RealType(1));
   }
 
   // compiler-generated copy ctor and assignment operator are fine
diff -ur boost.org/boost/random/geometric_distribution.hpp boost/boost/random/geometric_distribution.hpp
--- boost.org/boost/random/geometric_distribution.hpp	2012-12-07 21:17:45.789067382 +0100
+++ boost/boost/random/geometric_distribution.hpp	2012-12-07 21:41:34.970035494 +0100
@@ -50,8 +50,8 @@
    *
    * Requires: 0 < p < 1
    */
-  explicit geometric_distribution(const RealType& p = RealType(0.5))
-    : _p(p)
+  explicit geometric_distribution(const RealType& p_arg = RealType(0.5))
+    : _p(p_arg)
   {
     assert(RealType(0) < _p && _p < RealType(1));
     init();
